mapscripts Route131_MapScripts {
	MAP_SCRIPT_ON_TRANSITION : Route131_OnTransition
}

script Route131_OnTransition {
	call(Common_EventScript_DisableBPReward)
	end
}

script Route131_EventScript_LittleGirl {
	lock
	faceplayer
	msgbox(format("My big brother said there's a statue around here that can teleport you!"))
	msgbox(format("I haven't found it yet though."))
	release
	end
}

script Route131_EventScript_Statue {
	lock
	if(flag(FLAG_LANDMARK_SKY_PILLAR)) {
		msgbox(format("Warp to Sky Pillar?"), MSGBOX_YESNO)
		if(var(VAR_RESULT) == YES) {
			warpteleport(MAP_SKY_PILLAR_ENTRANCE, 2)
			release
			end
		}
	}
	msgbox(format("The ancient statue is silent."))
	release
	end
}

script Route131_EventScript_Richard {
	trainerbattle_single(TRAINER_RICHARD, Route131_Text_RichardIntro, Route131_Text_RichardDefeat)
	msgbox(Route131_Text_RichardPostBattle, MSGBOX_AUTOCLOSE)
	call(Route131_EventScript_TryRichardRematch)
	release
	end
}
script Route131_EventScript_TryRichardRematch {
	lock
    call(Common_EventScript_ShouldDoRematch)
	goto_if_eq(VAR_RESULT, FALSE, Common_EventScript_NopReturn)
	setvar(VAR_0x8003, TRAINER_RICHARD)
	setvar(VAR_0x8004, 1)
	call(Common_EventScript_CheckRecentRematchesSetBP)
	trainerbattle_no_intro(TRAINER_RICHARD, Route131_Text_RichardDefeat)
	special(UpdateRecentTrainers)
	return
}

script Route131_EventScript_Herman {
	trainerbattle_single(TRAINER_HERMAN, Route131_Text_HermanIntro, Route131_Text_HermanDefeat)
	msgbox(Route131_Text_HermanPostBattle, MSGBOX_AUTOCLOSE)
	call(Route131_EventScript_TryHermanRematch)
	release
	end
}
script Route131_EventScript_TryHermanRematch {
	lock
    call(Common_EventScript_ShouldDoRematch)
	goto_if_eq(VAR_RESULT, FALSE, Common_EventScript_NopReturn)
	setvar(VAR_0x8003, TRAINER_HERMAN)
	setvar(VAR_0x8004, 1)
	if (defeated(TRAINER_SUSIE)) {
		msgbox(format("Include Susie and make it a double battle?"), MSGBOX_YESNO)
		if (var(VAR_RESULT) == YES) {
			trainerbattle(TRAINER_BATTLE_SET_TRAINER_B, TRAINER_SUSIE, 0, NULL, Route131_Text_SusieDefeat)
			addvar(VAR_0x8004, 1)
		}
	}
	call(Common_EventScript_CheckRecentRematchesSetBP)
	trainerbattle_no_intro(TRAINER_HERMAN, Route131_Text_HermanDefeat)
	special(UpdateRecentTrainers)
	return
}

script Route131_EventScript_Susie {
	trainerbattle_single(TRAINER_SUSIE, Route131_Text_SusieIntro, Route131_Text_SusieDefeat)
	msgbox(Route131_Text_SusiePostBattle, MSGBOX_AUTOCLOSE)
	call(Route131_EventScript_TrySusieRematch)
	release
	end
}
script Route131_EventScript_TrySusieRematch {
	lock
    call(Common_EventScript_ShouldDoRematch)
	goto_if_eq(VAR_RESULT, FALSE, Common_EventScript_NopReturn)
	setvar(VAR_0x8003, TRAINER_SUSIE)
	setvar(VAR_0x8004, 1)
	if (defeated(TRAINER_HERMAN)) {
		msgbox(format("Include Herman and make it a double battle?"), MSGBOX_YESNO)
		if (var(VAR_RESULT) == YES) {
			trainerbattle(TRAINER_BATTLE_SET_TRAINER_B, TRAINER_HERMAN, 0, NULL, Route131_Text_HermanDefeat)
			addvar(VAR_0x8004, 1)
		}
	}
	call(Common_EventScript_CheckRecentRematchesSetBP)
	trainerbattle_no_intro(TRAINER_SUSIE, Route131_Text_SusieDefeat)
	special(UpdateRecentTrainers)
	return
}

script Route131_EventScript_Kara {
	trainerbattle_single(TRAINER_KARA, Route131_Text_KaraIntro, Route131_Text_KaraDefeat)
	msgbox(Route131_Text_KaraPostBattle, MSGBOX_AUTOCLOSE)
	call(Route131_EventScript_TryKaraRematch)
	release
	end
}
script Route131_EventScript_TryKaraRematch {
	lock
    call(Common_EventScript_ShouldDoRematch)
	goto_if_eq(VAR_RESULT, FALSE, Common_EventScript_NopReturn)
	setvar(VAR_0x8003, TRAINER_KARA)
	setvar(VAR_0x8004, 2)
	call(Common_EventScript_CheckRecentRematchesSetBP)
	trainerbattle_no_intro(TRAINER_KARA, Route131_Text_KaraDefeat)
	special(UpdateRecentTrainers)
	return
}

script Route131_EventScript_Reli {
	trainerbattle_double(TRAINER_RELI_AND_IAN, Route131_Text_ReliIntro, Route131_Text_ReliDefeat, Route131_Text_ReliNotEnoughMons)
	msgbox(Route131_Text_ReliPostBattle, MSGBOX_AUTOCLOSE)
	call(Route131_EventScript_TryReliRematch)
	release
	end
}
script Route131_EventScript_TryReliRematch {
	lock
    call(Common_EventScript_ShouldDoRematch)
	goto_if_eq(VAR_RESULT, FALSE, Common_EventScript_NopReturn)
	setvar(VAR_0x8003, TRAINER_RELI_AND_IAN)
	setvar(VAR_0x8004, 1)
	call(Common_EventScript_CheckRecentRematchesSetBP)
	trainerbattle_no_intro(TRAINER_RELI_AND_IAN, Route131_Text_ReliDefeat)
	special(UpdateRecentTrainers)
	return
}

script Route131_EventScript_Ian {
	trainerbattle_double(TRAINER_RELI_AND_IAN, Route131_Text_IanIntro, Route131_Text_IanDefeat, Route131_Text_IanNotEnoughMons)
	msgbox(Route131_Text_IanPostBattle, MSGBOX_AUTOCLOSE)
	call(Route131_EventScript_TryIanRematch)
	release
	end
}
script Route131_EventScript_TryIanRematch {
	lock
    call(Common_EventScript_ShouldDoRematch)
	goto_if_eq(VAR_RESULT, FALSE, Common_EventScript_NopReturn)
	setvar(VAR_0x8003, TRAINER_RELI_AND_IAN)
	setvar(VAR_0x8004, 1)
	call(Common_EventScript_CheckRecentRematchesSetBP)
	trainerbattle_no_intro(TRAINER_RELI_AND_IAN, Route131_Text_IanDefeat)
	special(UpdateRecentTrainers)
	return
}

script Route131_EventScript_Talia {
	trainerbattle_single(TRAINER_TALIA, Route131_Text_TaliaIntro, Route131_Text_TaliaDefeat)
	msgbox(Route131_Text_TaliaPostBattle, MSGBOX_AUTOCLOSE)
	call(Route131_EventScript_TryTaliaRematch)
	release
	end
}
script Route131_EventScript_TryTaliaRematch {
	lock
    call(Common_EventScript_ShouldDoRematch)
	goto_if_eq(VAR_RESULT, FALSE, Common_EventScript_NopReturn)
	setvar(VAR_0x8003, TRAINER_TALIA)
	setvar(VAR_0x8004, 1)
	call(Common_EventScript_CheckRecentRematchesSetBP)
	trainerbattle_no_intro(TRAINER_TALIA, Route131_Text_TaliaDefeat)
	special(UpdateRecentTrainers)
	return
}

script Route131_EventScript_Kevin {
	trainerbattle_single(TRAINER_KEVIN, Route131_Text_KevinIntro, Route131_Text_KevinDefeat)
	msgbox(Route131_Text_KevinPostBattle, MSGBOX_AUTOCLOSE)
	call(Route131_EventScript_TryKevinRematch)
	release
	end
}
script Route131_EventScript_TryKevinRematch {
	lock
    call(Common_EventScript_ShouldDoRematch)
	goto_if_eq(VAR_RESULT, FALSE, Common_EventScript_NopReturn)
	setvar(VAR_0x8003, TRAINER_KEVIN)
	setvar(VAR_0x8004, 1)
	call(Common_EventScript_CheckRecentRematchesSetBP)
	trainerbattle_no_intro(TRAINER_KEVIN, Route131_Text_KevinDefeat)
	special(UpdateRecentTrainers)
	return
}
