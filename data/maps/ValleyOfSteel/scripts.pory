mapscripts ValleyOfSteel_MapScripts {
	MAP_SCRIPT_ON_TRANSITION : Common_EventScript_DisableBPReward
}

script ValleyOfSteel_EventScript_NorthSign {
    msgbox("Valley of Steel\n{UP_ARROW} Route 112\pDanger! Heavy metal exposure!\nLimit time spent in the valley!", MSGBOX_SIGN)
    end
}

script ValleyOfSteel_EventScript_SouthSign {
    msgbox("Valley of Steel\n{DOWN_ARROW} Route 117\pDanger! Heavy metal exposure!\nLimit time spent in the valley!", MSGBOX_SIGN)
    end
}

script ValleyOfSteel_EventScript_ContaminatedWaterSign {
    msgbox("Danger! Contaminated Water!\nLimit exposure to heavy metals!", MSGBOX_SIGN)
    end
}

script ValleyOfSteel_EventScript_Contamination_0 {
	call(ValleyOfSteel_EventScript_ContaminatePartyPoison)
	setvar(VAR_TEMP_2, 0)
	end
}

script ValleyOfSteel_EventScript_Contamination_1 {
	call(ValleyOfSteel_EventScript_ContaminatePartyPoison)
	setvar(VAR_TEMP_2, 1)
	end
}

script ValleyOfSteel_EventScript_Contamination_2 {
	call(ValleyOfSteel_EventScript_ContaminatePartyPoison)
	setvar(VAR_TEMP_2, 2)
	end
}

script ValleyOfSteel_EventScript_ContaminatePartyPoison {
	goto_if_gt(VAR_TEMP_1, 7, Common_EventScript_NopReturn)
	specialvar(VAR_0x8005, CalculatePlayerPartyCount)
	random(7)
	goto_if_gt(VAR_RESULT, VAR_0x8005, ValleyOfSteel_EventScript_ContaminatePartyPoison)
	copyvar(VAR_0x8004, VAR_RESULT)
	setvar(VAR_RESULT, FALSE)
	while (var(VAR_RESULT) == FALSE && var(VAR_0x8004) > 0) {
		subvar(VAR_0x8004, 1)
		specialvar(VAR_RESULT, TryOverworldPoisonMon)
	}
	call_if_eq(VAR_RESULT, TRUE, ValleyOfSteel_EventScript_StatusSucceeded)
	return
}

script ValleyOfSteel_EventScript_StatusSucceeded {
	addvar(VAR_TEMP_1, 1)
	return
}

script ValleyOfSteel_EventScript_Pepper {
	trainerbattle_single(TRAINER_PEPPER, ValleyOfSteel_Text_PepperIntro, ValleyOfSteel_Text_PepperDefeat)
	msgbox(ValleyOfSteel_Text_PepperPostBattle, MSGBOX_AUTOCLOSE)
	call(ValleyOfSteel_EventScript_TryPepperRematch)
	release
	end
}
script ValleyOfSteel_EventScript_TryPepperRematch {
	lock
    call(Common_EventScript_ShouldDoRematch)
	goto_if_eq(VAR_RESULT, FALSE, Common_EventScript_NopReturn)
	setvar(VAR_0x8003, TRAINER_PEPPER)
	setvar(VAR_0x8004, 1)
	call(Common_EventScript_CheckRecentRematchesSetBP)
	trainerbattle_no_intro(TRAINER_PEPPER, ValleyOfSteel_Text_PepperDefeat)
	special(UpdateRecentTrainers)
	return
}
text ValleyOfSteel_Text_PepperIntro {
	"Are you heading north or south?"
}
text ValleyOfSteel_Text_PepperDefeat {
	"I see, I see."
}
text ValleyOfSteel_Text_PepperPostBattle {
	"Stay prepped and ready! That's the\n"
	"Ranger way!"
}

script ValleyOfSteel_EventScript_Stark {
	trainerbattle_single(TRAINER_STARK, ValleyOfSteel_Text_StarkIntro, ValleyOfSteel_Text_StarkDefeat)
	msgbox(ValleyOfSteel_Text_StarkPostBattle, MSGBOX_AUTOCLOSE)
	call(ValleyOfSteel_EventScript_TryStarkRematch)
	release
	end
}
script ValleyOfSteel_EventScript_TryStarkRematch {
	lock
    call(Common_EventScript_ShouldDoRematch)
	goto_if_eq(VAR_RESULT, FALSE, Common_EventScript_NopReturn)
	setvar(VAR_0x8003, TRAINER_STARK)
	setvar(VAR_0x8004, 1)
	if (defeated(TRAINER_YINSEN)) {
		msgbox(format("Include Yinsen and make it a double battle?"), MSGBOX_YESNO)
		if (var(VAR_RESULT) == YES) {
			trainerbattle(TRAINER_BATTLE_SET_TRAINER_B, TRAINER_YINSEN, 0, NULL, ValleyOfSteel_Text_YinsenDefeat)
			addvar(VAR_0x8004, 1)
		}
	}
	call(Common_EventScript_CheckRecentRematchesSetBP)
	trainerbattle_no_intro(TRAINER_STARK, ValleyOfSteel_Text_StarkDefeat)
	special(UpdateRecentTrainers)
	return
}
text ValleyOfSteel_Text_StarkIntro {
	"Hah! I'm a titan of industry!"
}
text ValleyOfSteel_Text_StarkDefeat {
	"No fair, we had a power outage."
}
text ValleyOfSteel_Text_StarkPostBattle {
	"I trained these Pok√©mon up from\n"
	"nothing in a cave! With some scrap!"
}

script ValleyOfSteel_EventScript_Yinsen {
	trainerbattle_single(TRAINER_YINSEN, ValleyOfSteel_Text_YinsenIntro, ValleyOfSteel_Text_YinsenDefeat)
	msgbox(ValleyOfSteel_Text_YinsenPostBattle, MSGBOX_AUTOCLOSE)
	call(ValleyOfSteel_EventScript_TryYinsenRematch)
	release
	end
}
script ValleyOfSteel_EventScript_TryYinsenRematch {
	lock
    call(Common_EventScript_ShouldDoRematch)
	goto_if_eq(VAR_RESULT, FALSE, Common_EventScript_NopReturn)
	setvar(VAR_0x8003, TRAINER_YINSEN)
	setvar(VAR_0x8004, 1)
	if (defeated(TRAINER_STARK)) {
		msgbox(format("Include Stark and make it a double battle?"), MSGBOX_YESNO)
		if (var(VAR_RESULT) == YES) {
			trainerbattle(TRAINER_BATTLE_SET_TRAINER_B, TRAINER_STARK, 0, NULL, ValleyOfSteel_Text_StarkDefeat)
			addvar(VAR_0x8004, 1)
		}
	}
	call(Common_EventScript_CheckRecentRematchesSetBP)
	trainerbattle_no_intro(TRAINER_YINSEN, ValleyOfSteel_Text_YinsenDefeat)
	special(UpdateRecentTrainers)
	return
}
text ValleyOfSteel_Text_YinsenIntro {
	"I'm going to buy my friend some time!"
}
text ValleyOfSteel_Text_YinsenDefeat {
	"Ack! Some dust got in my mouth!"
}
text ValleyOfSteel_Text_YinsenPostBattle {
	"Mr. Stark, I don't feel so good."
	"Maybe it's all the toxic dust?"
}

script ValleyOfSteel_EventScript_Vanko {
	trainerbattle_single(TRAINER_VANKO, ValleyOfSteel_Text_VankoIntro, ValleyOfSteel_Text_VankoDefeat)
	msgbox(ValleyOfSteel_Text_YinsenPostBattle, MSGBOX_AUTOCLOSE)
	call(ValleyOfSteel_EventScript_TryYinsenRematch)
	release
	end
}
script ValleyOfSteel_EventScript_TryVankoRematch {
	lock
    call(Common_EventScript_ShouldDoRematch)
	goto_if_eq(VAR_RESULT, FALSE, Common_EventScript_NopReturn)
	setvar(VAR_0x8003, TRAINER_VANKO)
	setvar(VAR_0x8004, 1)
	call(Common_EventScript_CheckRecentRematchesSetBP)
	trainerbattle_no_intro(TRAINER_VANKO, ValleyOfSteel_Text_VankoDefeat)
	special(UpdateRecentTrainers)
	return
}
text ValleyOfSteel_Text_VankoIntro {
	"Iron may bend, but my resolve does not!"
}
text ValleyOfSteel_Text_VankoDefeat {
	"Father, I failed you!"
}
text ValleyOfSteel_Text_VankoPostBattle {
	"If Arceus is God, why can you make\n"
	"Them faint?"
}