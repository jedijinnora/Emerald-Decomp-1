mapscripts EverGrandeCity_Headquarters_1F_MapScripts {
    MAP_SCRIPT_ON_FRAME_TABLE[
        VAR_EVER_GRANDE_CITY_STATE, 1: EverGrandeCity_Headquarters_1F_EventScript_Enter
        VAR_EVER_GRANDE_CITY_STATE, 2: EverGrandeCity_Headquarters_1F_EventScript_Enter
    ]
}

//Object IDs
const LOCALID_DESKLADY = 1
const LOCALID_BOX = 7

//TEMPs Used:
//FLAG_TEMP_1 SecurityMan intro
//FLAG_TEMP_2 Konami intro
//VAR_TEMP_1 and VAR_TEMP_2 Game Over randomization
//VAR_TEMP_3 challenges state variable
//VAR_TEMP_4 for giving missed HMs


script EverGrandeCity_Headquarters_1F_EventScript_Enter {
    lock
    setvar(VAR_EVER_GRANDE_CITY_STATE, 5)
    applymovement(OBJ_EVENT_ID_PLAYER, EverGrandeCity_Headquarters_1F_Movement_PlayerApproachDesk)
    waitmovement(0)
    goto(IntroEnd)
}

movement EverGrandeCity_Headquarters_1F_Movement_PlayerApproachDesk {
    walk_up
    walk_up
    walk_up
    walk_up
    step_end
}


// Desk Lady scripts
script EverGrandeCity_Headquarters_1F_EventScript_DeskLady {
	lock
	faceplayer
    goto_if_gt(VAR_EVER_GRANDE_CITY_STATE, 11, CheerBye)

    IntroEnd:
	msgbox(format("You must be one of our foreign exchange students. Welcome to Hoenn!"))
    msgbox(format("Let me grab a box for you."))
    waitmessage

    delay(4)
    applymovement(LOCALID_DESKLADY, Common_Movement_FaceLeft)
    waitmovement(LOCALID_DESKLADY)
    delay(4)
    removeobject(LOCALID_BOX)
    delay(4)
    applymovement(LOCALID_DESKLADY, Common_Movement_FaceDown)
    waitmovement(LOCALID_DESKLADY)
    delay(4)
    giveitem(ITEM_POKE_BALL, 30)
    giveitem(ITEM_DREAM_BALL, 10)

    giveitem(ITEM_EXP_SHARE)
    msgbox(format("The Exp. Share toggles whether all party Pokémon gain experience during battle."))

    //infinite candy
    //giveitem()
    //msgbox(format("The Infinite Candy can level a Pokémon up to your current level cap."))

    giveitem(ITEM_VS_SEEKER)
    msgbox(format("The Vs. Seeker charges by walking and challenges nearby Trainers for a rematch."))

    msgbox(format("You also get a Pokénav. This one is a new edition, so it may be a little buggy."))
    setflag(FLAG_SYS_POKENAV_GET)
    playfanfare(MUS_OBTAIN_ITEM)
    msgbox(format("{PLAYER} obtained the Pokénav!"))
    waitfanfare
    msgbox(format("I'm legally required to inform you that attempting to damage, modify, upgrade, or customize your Pokénav without speaking to a licensed representative of the Devon Corporation is a felony under Hoenn law and will void your warranty."))
    msgbox(format("Isn't that delightful? Sorry, this bigwig at Devon has been complaining about patent violation or some other legal muck. We used to just have Silph Co. goons screaming on the phone about re-usable TMs…"))

    msgbox(format("Finally, here's the ticket for using the Hoenn ferry system."))
    giveitem(ITEM_SS_TICKET)
    
    msgbox(format("You're all set! I'll update the system with your information."))
    msgbox(format("The scientist in the white coat can give you more information about the game."))
    msgbox(format("The scientist in the blue coat handles difficulty settings and optional challenges."))
    msgbox(format("Once you're finished here, speak to the sailor at the dock to use the ferry."))
    setvar(VAR_EVER_GRANDE_CITY_STATE, 20)

    CheerBye:
    goto_if_set(FLAG_SYS_GAME_CLEAR, CheerChamp)
    msgbox(format("Go get 'em, future Champion!"))
    release
    end
    CheerChamp:
    msgbox(format("Go get 'em, Champion {PLAYER}!"))
	release
	end
}



// General prompt scripts
script EverGrandeCity_Headquarters_1F_EventScript_GoCheckIn {
    msgbox(format("You have to check in at the main desk before I can help you with anything."))
    applymovement(VAR_LAST_TALKED, Common_Movement_FaceOriginalDirection)
    waitmovement(VAR_LAST_TALKED)
    release
    end
}

script EverGrandeCity_Headquarters_1F_EventScript_ScientistOut {
    msgbox(format("May the odds be ever in your favor."))
    applymovement(VAR_LAST_TALKED, Common_Movement_FaceOriginalDirection)
    waitmovement(VAR_LAST_TALKED)
    release
    end
}



// Information scripts
script EverGrandeCity_Headquarters_1F_EventScript_InformationScientist {
	lock
	faceplayer
    goto_if_le(VAR_EVER_GRANDE_CITY_STATE, 11, EverGrandeCity_Headquarters_1F_EventScript_GoCheckIn)
    msgbox(format("I am the Info Guy!\nWhat would you like to know?"))

    dynmultipush("Gym and HM info", 1)
    dynmultipush("View level caps", 2)
    dynmultipush("Routes to each Gym", 3)
    dynmultipush("Story info", 4)
    dynmultipush("Difficulty, Challenges, & Explore Mode", 9)

    dynmultistack(0,0,FALSE,6,FALSE,1,DYN_MULTICHOICE_CB_NONE)
    switch(var(VAR_RESULT)) {
        case 1:
            call(EverGrandeCity_Headquarters_1F_EventScript_GymHMInfo)
        case 2:
            call(EverGrandeCity_Headquarters_1F_EventScript_LevelCaps)
        case 3:
            call(EverGrandeCity_Headquarters_1F_EventScript_RoutesInfo)
        case 4:
            call(EverGrandeCity_Headquarters_1F_EventScript_StoryInfo)
        case 9:
            msgbox(format("Go talk to the people at the next desk!"))
        default:
            goto(EverGrandeCity_Headquarters_1F_EventScript_ScientistOut)
    }
    goto(EverGrandeCity_Headquarters_1F_EventScript_InformationScientist)
}

script EverGrandeCity_Headquarters_1F_EventScript_GymHMInfo {
    msgbox(format("In vanilla Emerald, the sequence of Gyms was mostly set by the need to obtain various HMs to move around the Hoenn region."))
    msgbox(format("In Emerald Beryl, the ferry system has been expanded: Lilycove, Mossdeep, Sootopolis, Ever Grande, Slateport, Littleroot, Dewford, and Rustboro are all available destinations from the start."))
    msgbox(format("This and other map changes makes it possible to fight the Gyms in any order. Gym leaders may use different teams depending on which badge you are challenging them for."))
    msgbox(format("Wild Pokémon scale based on your party's average level, and enemy Trainers' levels will scale based on your number of badges."))
    msgbox(format("Still, be wary of encountering trainers with fully evolved teams or competitive builds before you are ready! Check the docs!"))
    msgbox(format("Gym leaders give you a choice of HM after winning a new badge, further expanding your ability to move around the region."))
    msgbox(format("HMs may be used whenever you have the corresponding HM item in your Bag and a Pokémon in your party which could learn it."))
    return
}

script EverGrandeCity_Headquarters_1F_EventScript_LevelCaps {
    msgbox(format("0 badge level cap: 16 \n 1 badge level cap: 25"))
    msgbox(format("2 badge level cap: 34 \n 3 badge level cap: 43"))
    msgbox(format("4 badge level cap: 52 \n 5 badge level cap: 61"))
    msgbox(format("6 badge level cap: 70 \n 7 badge level cap: 79"))
    msgbox(format("8 badge level cap: 87 \n Elite 4 level cap: 90"))
    msgbox(format("Postgame level cap: 100"))
    msgbox(format("Level caps are disabled in Easy Difficulty or Explore Mode."))
    return
}

script EverGrandeCity_Headquarters_1F_EventScript_RoutesInfo {
    msgbox(format("I can tell you routes to any Gym! No HMs needed!"))
    dynmultichoice(0,0,FALSE,6,0,DYN_MULTICHOICE_CB_NONE, "Rustboro", "Dewford", "Mauville", "Lavaridge", "Petalburg", "Fortree", "Mossdeep", "Sootopolis")
    switch(var(VAR_RESULT)) {
        case 0:
            msgbox(format("To get to Rustboro, just take the ferry! Rustboro is a classic first badge to obtain."))
        case 1:
            msgbox(format("To get to Dewford, just take the ferry! Dewford is a solid choice for your first badge, as long as you aren't afraid of the dark!"))
        case 2:
            msgbox(format("To get to Mauville, take the ferry to Slateport and journey north through Route 110."))
            msgbox(format("You could also pick up an Acro Bike by Lilycove and take the long way via Routes 121, 122, 123, and 118."))
        case 3:
            msgbox(format("To get to Lavaridge, take the ferry to Rustboro and journey east through Route 116 and then northeast through Forina!"))
            msgbox(format("For a slightly longer and more dangerous route, start from Slateport and head north on Route 110 to Mauville. Then find the entrance to the Valley of Steel on Route 117 and go north!"))
            msgbox(format("Real explorers head north from Rustboro through Route 115, Meteor Falls, and Route 114 to Fallarbor. Then west via Route 113, south on Route 111 until you can access the Cable Car station on Route 112, and finally south from Mt. Chimney through Jagged Pass!"))
        case 4:
            msgbox(format("To get to Petalburg, you can take the ferry to Littleroot, head north until you reach Oldale, and then go west through Route 102."))
            msgbox(format("Or take the ferry to Rustboro and head south through Route 104 and Petalburg Woods!"))
            msgbox(format("Petalburg's Gym Leader isn't the hardest, but the Gym itself is a punishing gauntlet."))
        case 5:
            msgbox(format("To get to Fortree, take the ferry to Lilycove and then journey west through Route 123 and north through Route 121."))
            msgbox(format("If you go to Mauville and get a Bike, you can cross the narrow bridge over Route 118 and take Route 119 north to Fortree."))
            msgbox(format("Be ready to handle the jungle's Grass types!"))
        case 6:
            msgbox(format("To get to Mossdeep, just take the ferry! I wouldn't recommend it for your first badge though, it's one of the more challenging Gyms."))
        case 7:
            msgbox(format("To get to Sootopolis, just take the ferry! We use flying Pokémon to get you inside the caldera."))
            msgbox(format("You'll need to be able to handle lots of Water types to challenge Sootopolis Gym."))
        default:
    }
    return
}

script EverGrandeCity_Headquarters_1F_EventScript_StoryInfo {
    msgbox(format("Emerald Beryl doesn't have a single mandatory storyline."))
    msgbox(format("You could simple face all 8 Gyms and the Elite Four without engaging in other events…"))
    msgbox(format("But there's plenty going on if you explore!"))
    msgbox(format("Some events trigger by finding NPCs, some require a number of badges, and some trigger only after becoming Champion."))
    msgbox(format("The time period is years before RSE or ORAS, in a timeline without Mega Evolution, Z Moves, etc."))
    msgbox(format("You may find plenty of characters you recognize from vanilla storylines!"))
    msgbox(format("Please check the docs for more info if you want spoilers."))
    return
}



// Difficulty and Challenge scripts
script EverGrandeCity_Headquarters_1F_EventScript_DifficultyScientist {
	lock
	faceplayer
    goto_if_le(VAR_EVER_GRANDE_CITY_STATE, 11, EverGrandeCity_Headquarters_1F_EventScript_GoCheckIn)
    goto_if_set(FLAG_DEPARTED_EVER_GRANDE, EverGrandeCity_Headquarters_1F_EventScript_UpdateChallengesDifficulty)
	msgbox(format("I am the Challenge Guy!\nHow can I help you?"))

    dynmultipush("View current settings", 0)
    dynmultipush("Select difficulty settings", 1)
    if(var(VAR_DIFFICULTY_SETTING) != 1) {
        dynmultipush("Select optional challenges", 2)
    }
    dynmultipush("Optional challenge rules", 3)
    dynmultipush("OpChal: Random HMs", 11)
    dynmultipush("OpChal: No HMs", 12)
    dynmultipush("Nuzlocke/Monotype", 21)

    dynmultistack(0,0,FALSE,6,FALSE,0,DYN_MULTICHOICE_CB_NONE)
    switch(var(VAR_RESULT)) {
        case 0:
            call(EverGrandeCity_Headquarters_1F_EventScript_ViewChallengesDifficulty)
        case 1:
            call(EverGrandeCity_Headquarters_1F_EventScript_ModifyDifficulty)
        case 2:
            call(EverGrandeCity_Headquarters_1F_EventScript_ModifyChallenges)
        case 3:
            call(EverGrandeCity_Headquarters_1F_EventScript_ChallengeRules)
        case 11:
            call(EverGrandeCity_Headquarters_1F_EventScript_RandomHMInfo)
        case 12:
            call(EverGrandeCity_Headquarters_1F_EventScript_NoHMInfo)
        case 21:
            call(EverGrandeCity_Headquarters_1F_EventScript_NuzlockeMonotypeInfo)
        default:
            goto(EverGrandeCity_Headquarters_1F_EventScript_ScientistOut)
    }
    goto(EverGrandeCity_Headquarters_1F_EventScript_DifficultyScientist)
}

script EverGrandeCity_Headquarters_1F_EventScript_ViewChallengesDifficulty {
    switch(var(VAR_DIFFICULTY_SETTING)) {
        case 0:
            msgbox(format("You are playing on Standard difficulty."))
        case 1:
            msgbox(format("You are playing on Easy difficulty."))
        case 2:
            msgbox(format("You are playing on Hardcore difficulty."))
        default:
            buffernumberstring(STR_VAR_1, VAR_DIFFICULTY_SETTING)
            msgbox(format("Difficulty setting {STR_VAR_1} should not be reachable. Please report this bug."))
    }
    if(flag(FLAG_EXPLORE_MODE)) {
        msgbox(format("You have Explore Mode active."))
    }
    if(flag(FLAG_NO_EV_GRINDING)) {
        msgbox(format("EVs are not included in Pokémon stat calculations."))
    }
    if(flag(FLAG_NO_BAG_USE)) {
        msgbox(format("Items cannot be used during Trainer battles."))
    }
    call(EverGrandeCity_Headquarters_1F_EventScript_ViewCurrentChallenges)
    return
}

script EverGrandeCity_Headquarters_1F_EventScript_ViewCurrentChallenges {
    call(EverGrandeCity_Headquarters_1F_EventScript_SetChallengesToTempVar3)
    switch(var(VAR_TEMP_3)) {
        case 0:
            msgbox(format("You have no optional challenges active."))
        case 2:
            msgbox(format("You have the Random HMs challenge active."))
        case 6:
            msgbox(format("You have the No HMs challenge active."))
        default:
            buffernumberstring(STR_VAR_1, VAR_TEMP_3)
            msgbox(format("Challenge state {STR_VAR_1} should not be reachable. Please report this bug."))
    }
    return
}

script EverGrandeCity_Headquarters_1F_EventScript_SetChallengesToTempVar3 {
    setvar(VAR_TEMP_3, 0)

    //the ferry limit challenge added 1, when this was separate from hardcore mode

    if(flag(FLAG_CHALLENGE_HM_RANDOM)) {
        addvar(VAR_TEMP_3, 2)
    }
    if(flag(FLAG_CHALLENGE_HM_NONE)) {
        addvar(VAR_TEMP_3, 4)
    }
    return
}

script EverGrandeCity_Headquarters_1F_EventScript_UpdateChallengesDifficulty {
    call(EverGrandeCity_Headquarters_1F_EventScript_ViewChallengesDifficulty)
    msgbox(format("What would you like to do?"))
    if(var(VAR_DIFFICULTY_SETTING) != 1) {
        dynmultipush("Forfeit difficulty to Easy", 1)
    }
    if(var(VAR_DIFFICULTY_SETTING) == 2) {
        dynmultipush("Forfeit difficulty to Standard", 2)
    }
    if(var(VAR_TEMP_3) != 0) {
        dynmultipush("Forfeit an active challenge", 3)
    }
    if(flag(FLAG_NO_EV_GRINDING)) {
        dynmultipush("Turn on Effort Values", 11)
    } elif(!flag(FLAG_NO_EV_GRINDING)) {
        dynmultipush("Turn off Effort Values", 12)
    }
    dynmultipush("View Difficulty information", 20)

    dynmultistack(0,0,FALSE,6,FALSE,0,DYN_MULTICHOICE_CB_NONE)
    switch(var(VAR_RESULT)) {
        case 1:
            call(EverGrandeCity_Headquarters_1F_EventScript_ForfeitEasy)
        case 2:
            call(EverGrandeCity_Headquarters_1F_EventScript_ForfeitStandard)
        case 3:
            call(EverGrandeCity_Headquarters_1F_EventScript_ForfeitChallenge)
        case 11:
            call(EverGrandeCity_Headquarters_1F_EventScript_EVOn)
        case 12:
            call(EverGrandeCity_Headquarters_1F_EventScript_EVOff)
        case 20:
            call(EverGrandeCity_Headquarters_1F_EventScript_DifficultyRules)
        default:
            releaseall
            end
    }
    goto(EverGrandeCity_Headquarters_1F_EventScript_UpdateChallengesDifficulty)
}

script EverGrandeCity_Headquarters_1F_EventScript_ForfeitWarning {
    msgbox(format("This action cannot be undone. Are you certain you wish to proceed?"), MSGBOX_YESNO)
    goto_if_eq(VAR_RESULT, YES, Common_EventScript_NopReturn)
    releaseall
    end
}

script EverGrandeCity_Headquarters_1F_EventScript_ForfeitEasy {
    call(EverGrandeCity_Headquarters_1F_EventScript_ForfeitWarning)
    call(EverGrandeCity_Headquarters_1F_EventScript_SetDifficultyEasy)
}

script EverGrandeCity_Headquarters_1F_EventScript_ForfeitStandard {
    call(EverGrandeCity_Headquarters_1F_EventScript_ForfeitWarning)
    call(EverGrandeCity_Headquarters_1F_EventScript_SetDifficultyStandard)
}

script EverGrandeCity_Headquarters_1F_EventScript_ForfeitChallenge {
    call(EverGrandeCity_Headquarters_1F_EventScript_ViewCurrentChallenges)
    if(var(VAR_TEMP_3) == 0) {
        return
    }
    if(flag(FLAG_CHALLENGE_HM_RANDOM) && !flag(FLAG_CHALLENGE_HM_NONE)) {
        dynmultipush("Remove the Random HMs challenge", 2)
    }
    if(flag(FLAG_CHALLENGE_HM_NONE)) {
        dynmultipush("Remove the No HMs challenge", 3)
    }
    dynmultipush("Go Back", 10)
    dynmultistack(0,0,FALSE,6,FALSE,0,DYN_MULTICHOICE_CB_NONE)
    switch(var(VAR_RESULT)) {
        case 2:
            call(EverGrandeCity_Headquarters_1F_EventScript_ForfeitNoHM)
        case 3:
            call(EverGrandeCity_Headquarters_1F_EventScript_ForfeitNoHM)
        default:
            return
    }
    goto(EverGrandeCity_Headquarters_1F_EventScript_ForfeitChallenge)
}

script EverGrandeCity_Headquarters_1F_EventScript_ForfeitRandomHM {
    call(EverGrandeCity_Headquarters_1F_EventScript_ForfeitWarning)
    clearflag(FLAG_CHALLENGE_HM_RANDOM)
    msgbox(format("Random HMs challenge removed."))
    return
}

script EverGrandeCity_Headquarters_1F_EventScript_ForfeitNoHM {
    call(EverGrandeCity_Headquarters_1F_EventScript_ForfeitWarning)
    clearflag(FLAG_CHALLENGE_HM_NONE)
    msgbox(format("No HMs challenge removed. You will now be given HMs according to your number of badges."))
    call(Common_EventScript_CountBadges)
    setvar(VAR_TEMP_4, 0)
    msgbox(format("Would you like to continue with the Random HMs challenge active?"), MSGBOX_YESNO)
    goto_if_eq(VAR_RESULT, YES, EverGrandeCity_Headquarters_1F_EventScript_GiveMissingHMs)
    clearflag(FLAG_CHALLENGE_HM_RANDOM)
    goto(EverGrandeCity_Headquarters_1F_EventScript_GiveMissingHMs)
    end
}

script EverGrandeCity_Headquarters_1F_EventScript_GiveMissingHMs {
    compare_var_to_var(VAR_TEMP_4, VAR_NUM_BADGES)
    goto_if_eq(Common_EventScript_NopReturn)
    addvar(VAR_TEMP_4, 1)
    call(Gym_EventScript_GetHM)
    goto(EverGrandeCity_Headquarters_1F_EventScript_GiveMissingHMs)
    end
}

script EverGrandeCity_Headquarters_1F_EventScript_ModifyDifficulty {
    call(EverGrandeCity_Headquarters_1F_EventScript_ViewChallengesDifficulty)
    if(var(VAR_TEMP_3) == 0 && var(VAR_DIFFICULTY_SETTING) != 1) {
        dynmultipush("Play on Easy difficulty", 1)
    }
    if(var(VAR_DIFFICULTY_SETTING) != 0) {
        dynmultipush("Play on Standard difficulty", 0)
    }
    if(var(VAR_DIFFICULTY_SETTING) != 2) {
        dynmultipush("Play on Hardcore difficulty", 2)
    }
    if(flag(FLAG_NO_EV_GRINDING)) {
        dynmultipush("Turn on Effort Values", 11)
    } elif(!flag(FLAG_NO_EV_GRINDING)) {
        dynmultipush("Turn off Effort Values", 12)
    }
    dynmultipush("View Difficulty information", 20)
    dynmultistack(0,0,FALSE,6,FALSE,0,DYN_MULTICHOICE_CB_NONE)
    switch(var(VAR_RESULT)) {
        case 0:
            call(EverGrandeCity_Headquarters_1F_EventScript_SetDifficultyStandard)
        case 1:
            call(EverGrandeCity_Headquarters_1F_EventScript_SetDifficultyEasy)
        case 2:
            call(EverGrandeCity_Headquarters_1F_EventScript_SetDifficultyHardcore)
        case 11:
            call(EverGrandeCity_Headquarters_1F_EventScript_EVOn)
        case 12:
            call(EverGrandeCity_Headquarters_1F_EventScript_EVOff)
        case 20:
            call(EverGrandeCity_Headquarters_1F_EventScript_DifficultyRules)
        default:
            return
    }
    goto(EverGrandeCity_Headquarters_1F_EventScript_ModifyDifficulty)
}

script EverGrandeCity_Headquarters_1F_EventScript_SetDifficultyEasy {
    setvar(VAR_DIFFICULTY_SETTING, 1)
    clearflag(FLAG_CHALLENGE_HM_NONE)
    clearflag(FLAG_CHALLENGE_HM_RANDOM)
    clearflag(FLAG_NO_BAG_USE)
    msgbox(format("Difficulty set to Easy. Any active challenges removed."))
    return
}

script EverGrandeCity_Headquarters_1F_EventScript_SetDifficultyStandard {
    setvar(VAR_DIFFICULTY_SETTING, 0)
    clearflag(FLAG_NO_BAG_USE)
    msgbox(format("Difficulty set to Standard."))
    return
}

script EverGrandeCity_Headquarters_1F_EventScript_SetDifficultyHardcore {
    setvar(VAR_DIFFICULTY_SETTING, 2)
    setflag(FLAG_NO_EV_GRINDING)
    setflag(FLAG_NO_BAG_USE)
    msgbox(format("Difficulty set to Hardcore."))
    special(HardcoreSetBattleStyle)
    msgbox(format("Battle Style overridden to Set Mode."))
    return
}

script EverGrandeCity_Headquarters_1F_EventScript_EVOff {
    setflag(FLAG_NO_EV_GRINDING)
    msgbox(format("Effort Values will no longer affect Pokémon stats, though they still appear in the summary screen."))
    return
}

script EverGrandeCity_Headquarters_1F_EventScript_EVOn {
    clearflag(FLAG_NO_EV_GRINDING)
    msgbox(format("Effort Values will be included in Pokémon stats."))
    return
}

script EverGrandeCity_Headquarters_1F_EventScript_DifficultyRules {
    msgbox(format("The three difficulty options are Standard, Easy, and Hardcore."))
    msgbox(format("Standard: level caps enabled. Item use in battle is allowed. Battle style may be set in the Options menu."))
    msgbox(format("Easy: no level caps. Enemy Trainers use the easier party available to them, and all NPC levels are reduced by 1."))
    msgbox(format("Hardcore: level caps enabled. No item use in battle. Battle style is overridden to Set Mode."))
    msgbox(format("Also in Hardcore difficulty, your SS Ticket is used up when taking the ferry. You'll have to defeat a Gym Leader to get it back."))
    msgbox(format("You may also choose to toggle EVs on or off."))
    return
}

script EverGrandeCity_Headquarters_1F_EventScript_ChallengeRules {
    msgbox(format("Optional challenges may be enabled or disabled freely prior to leaving Ever Grande City for the first time."))
    msgbox(format("Challenge rewards are given after becoming Champion."))
    msgbox(format("To forfeit a challenge, find me on the second floor of any Pokémon Center if you turn out to be, as the phrase goes, a total scrub."))
    msgbox(format("Optional challenges require either Standard or Hardcore difficulty."))
    return
}

script EverGrandeCity_Headquarters_1F_EventScript_ModifyChallenges {
    msgbox(format("Please select your desired option."))
    dynmultichoice(0,0,FALSE,6,0,DYN_MULTICHOICE_CB_NONE, "No challenges", "Activate Random HMs challenge", "Activate No HMs challenge")
    switch(var(VAR_RESULT)) {
        case 0:
            clearflag(FLAG_CHALLENGE_HM_RANDOM)
            clearflag(FLAG_CHALLENGE_HM_NONE)
            msgbox(format("All optional challenges removed."))
        case 1:
            setflag(FLAG_CHALLENGE_HM_RANDOM)
            clearflag(FLAG_CHALLENGE_HM_NONE)
            msgbox(format("You activated the Random HMs challenge."))
        case 2:
            setflag(FLAG_CHALLENGE_HM_RANDOM)
            setflag(FLAG_CHALLENGE_HM_NONE)
            msgbox(format("You activated the No HMs challenge."))
        default:
            msgbox(format("Your previous challenge settings will be retained."))
    }
}

script EverGrandeCity_Headquarters_1F_EventScript_RandomHMInfo {
    msgbox(format("The Random HMs challenge gives you a random HM after each gym instead of allowing you to choose."))
    msgbox(format("You will never receive Surf before badge 4."))
    msgbox(format("This challenge is mostly to make the game more interesting, and to reward players with a sense of pride and accomplishment."))
    return
}

script EverGrandeCity_Headquarters_1F_EventScript_NoHMInfo {
    msgbox(format("In the No HMs challenge no HMs will be rewarded by Gym Leaders. This severely restricts the areas you can fully explore and limits you from many useful items and encounters."))
    msgbox(format("You will have to acquire all 8 badges without the use of HMs, and then return to Ever Grande."))
    msgbox(format("Once you have 8 badges, the statue in the Pokémon Center will offer to warp you to Emerald Cape."))
    msgbox(format("From there you will enter Victory Road and be able to reach the Pokémon League without needing HMs."))
    return
}

script EverGrandeCity_Headquarters_1F_EventScript_NuzlockeMonotypeInfo {
    msgbox(format("Monotype or Nuzlocke runs are the responsibility of the player to manage."))
    msgbox(format("Jinnora: it didn't seem worth the dev time I'd have to spend on all the rule variants."))
    msgbox(format("Look at the starter option for monotype runs if you missed it."))
    msgbox(format("For Nuzlockes, check the option to disable EVs and there's an infinite candy to avoid grinding."))
    return
}



// Hint Kid scripts
script EverGrandeCity_Headquarters_1F_EventScript_GameBoyKid {
	lock
    call_if_unset(FLAG_TEMP_2, EverGrandeCity_Headquarters_1F_EventScript_KonamiIntro)
    msgbox(format("Want another code?"), MSGBOX_YESNO)
    call_if_ne(VAR_RESULT, NO, EverGrandeCity_Headquarters_1F_EventScript_GivePuzzleHint)
    msgbox(format("Affirmative."))
    clearflag(FLAG_TEMP_2)
    setvar(VAR_TEMP_1, 0)
    release
    end
}

script EverGrandeCity_Headquarters_1F_EventScript_KonamiIntro {
    msgbox(format("Don't be a n00b!\nNever forget!"))
    msgbox(format("{UP_ARROW} {UP_ARROW} {DOWN_ARROW} {DOWN_ARROW} {LEFT_ARROW} {RIGHT_ARROW} {LEFT_ARROW} {RIGHT_ARROW} B A start"))
    setflag(FLAG_TEMP_2)
    random(7)
    copyvar(VAR_TEMP_2, VAR_RESULT)
    addvar(VAR_TEMP_2, 5)
    msgbox(format("Sadly, Konami code doesn't actually do anything in this game."))
    return
}

script EverGrandeCity_Headquarters_1F_EventScript_GameOverPlayAgain {
    msgbox(format("GAME OVER! Insert quarter to play again."))
    clearflag(FLAG_TEMP_2)
    setvar(VAR_TEMP_1, 0)
    release
    end
}

script EverGrandeCity_Headquarters_1F_EventScript_GivePuzzleHint {
    random(19)
    compare_var_to_var(VAR_RESULT, VAR_TEMP_1)
    call_if_lt(EverGrandeCity_Headquarters_1F_EventScript_GameOverPlayAgain)
    compare_var_to_var(VAR_TEMP_2, VAR_TEMP_1)
    call_if_lt(EverGrandeCity_Headquarters_1F_EventScript_GameOverPlayAgain)
    switch(var(VAR_TEMP_1)) {
        case 0: 
            msgbox(format("Don't forget to call ur mom if you have encountered ShoalShock!"))
            msgbox(format("{UP_ARROW} {RIGHT_ARROW} {DOWN_ARROW} {LEFT_ARROW} {DOWN_ARROW} {DOWN_ARROW} {LEFT_ARROW} {UP_ARROW} {RIGHT_ARROW} {DOWN_ARROW} {LEFT_ARROW} {UP_ARROW} {LEFT_ARROW} {DOWN_ARROW} {LEFT_ARROW} {UP_ARROW} {RIGHT_ARROW} {DOWN_ARROW}"))	
        case 1: 
            msgbox(format("You must construct additional ice puzzles. {DOWN_ARROW} {DOWN_ARROW} {RIGHT_ARROW} {UP_ARROW} {LEFT_ARROW} {UP_ARROW} {RIGHT_ARROW} {DOWN_ARROW} {LEFT_ARROW} {DOWN_ARROW}"))
        case 2: 
            msgbox(format("How many Swordfish can 1d10t5 like you fit in one password file?"))
            msgbox(format("{UP_ARROW} {RIGHT_ARROW} {DOWN_ARROW} {LEFT_ARROW} {UP_ARROW} {RIGHT_ARROW} {DOWN_ARROW} {LEFT_ARROW} {UP_ARROW} {RIGHT_ARROW} {UP_ARROW} {RIGHT_ARROW}"))
        case 3: 
            msgbox(format("I goin in ur cave, taking ur icicles! \n {LEFT_ARROW} {DOWN_ARROW} {RIGHT_ARROW} {DOWN_ARROW}"))
        case 4: 
            msgbox(format("Articuno can't Kanto deez nuts! \n {DOWN_ARROW} {LEFT_ARROW} {DOWN_ARROW} {LEFT_ARROW} {DOWN_ARROW} {RIGHT_ARROW} {UP_ARROW} {RIGHT_ARROW} {DOWN_ARROW} {LEFT_ARROW} {UP_ARROW} {LEFT_ARROW} {UP_ARROW} {RIGHT_ARROW} {DOWN_ARROW} {RIGHT_ARROW} {UP_ARROW}"))
        case 5: 
            msgbox(format("I hacked the Trick Master! \n {RIGHT_ARROW} {UP_ARROW} {RIGHT_ARROW} {UP_ARROW} {LEFT_ARROW} {DOWN_ARROW} {UP_ARROW} {LEFT_ARROW} {DOWN_ARROW} {RIGHT_ARROW} {DOWN_ARROW}"))
        case 6: 
            msgbox(format("In ur Trick House, lootin ur doorz! \n {UP_ARROW} {LEFT_ARROW} {DOWN_ARROW} {LEFT_ARROW} {DOWN_ARROW} {LEFT_ARROW} {UP_ARROW} {RIGHT_ARROW} {DOWN_ARROW} {RIGHT_ARROW} {UP_ARROW}"))
        case 7:
            msgbox(format("Is that a Sky Pillar in your pants or are you just happy to see me?"))
            msgbox(format("{LEFT_ARROW} {UP_ARROW} {UP_ARROW} {UP_ARROW} {LEFT_ARROW} {UP_ARROW} {UP_ARROW} {UP_ARROW} {UP_ARROW} {RIGHT_ARROW} {RIGHT_ARROW} {RIGHT_ARROW} {UP_ARROW}"))
        case 8:
            msgbox(format("Did you even read the booklet? It's just Braille."))
            msgbox(format("{DOWN_ARROW} {DOWN_ARROW} {RIGHT_ARROW} {RIGHT_ARROW} {DOWN_ARROW} {DOWN_ARROW} {DOWN_ARROW} A 7{DOWN_ARROW} {LEFT_ARROW} B {LEFT_ARROW} {LEFT_ARROW} {LEFT_ARROW} {DOWN_ARROW} A {DOWN_ARROW} {DOWN_ARROW} {RIGHT_ARROW} {DOWN_ARROW} 6{RIGHT_ARROW} {DOWN_ARROW} {RIGHT_ARROW} {RIGHT_ARROW} {RIGHT_ARROW} {DOWN_ARROW} {RIGHT_ARROW} {RIGHT_ARROW} {DOWN_ARROW} {DOWN_ARROW} A {LEFT_ARROW} A"))
        default:
            goto(EverGrandeCity_Headquarters_1F_EventScript_GameOverPlayAgain)
    }
    addvar(VAR_TEMP_1, 1)
    goto(EverGrandeCity_Headquarters_1F_EventScript_GameBoyKid)
}



// Credits scripts
script EverGrandeCity_Headquarters_1F_EventScript_CreditsLady {
    lock
    faceplayer
    goto_if_set(FLAG_CREDITS_LADY_INTRODUCTION, CreditsMenu)
    CreditsIntro:
    msgbox(format("Greetings! I can tell you about many of the resources and features Jinnora used while creating this game."))
    msgbox(format("You should also find this info in the README or in the master forum posts about the game, along with links."))
    msgbox(format("Jinnora: I realize this is a bit awkward and there's a lot of button pressing to get through, but it is important to me to include as full a credits list as possible within the game itself, since this project stands on the shoulders of so many other people's work."))
    msgbox(format("Jinnora: if you feel something is missing, or would like a credit modified or removed, please contact me on Discord."))
    setflag(FLAG_CREDITS_LADY_INTRODUCTION)
    CreditsMenu:
    msgbox(format("Which would you like to hear about?"))
    dynmultichoice(0,0,FALSE,6,0,DYN_MULTICHOICE_CB_NONE, "General resources used", "Features included", "Sources of inspiration", "Repeat credits intro")
    switch(var(VAR_RESULT)) {
        case 0:
            ResourcesMenu:
            msgbox(format("Which resource interests you?"))
            dynmultichoice(0,0,FALSE,6,0,DYN_MULTICHOICE_CB_NONE, "Team Aqua's Hideout", "Porymap", "Poryscript", "RHH Discord", "Pokeemerald Tutorials Master")
            switch(var(VAR_RESULT)) {
                case 0:
                    msgbox(format("Team Aqua's Hideout is a Youtube channel and Discord with many helpful guides on using the decompilation projects. Watching these videos is how Jinnora got started."))
                    goto(ResourcesMenu)
                case 1:
                    msgbox(format("Porymap is a software developed by huderlem for the decomp projects that allows easy editing of all the maps in the game. A lot of time was spent using this application!"))
                    goto(ResourcesMenu)
                case 2:
                    msgbox(format("Poryscript is a scripting language developed by huderlem, easier to use than the game's default .inc syntax. Nearly all NPC scripts created for this game were written in Poryscript!"))
                    goto(ResourcesMenu)
                case 3:
                    msgbox(format("Rom Hacking Hideout is the community which created the pokeemerald-expansion repository this project is based on. You may have noticed their credits scene in the game intro. A big thanks to everyone who continues to work on the expansion project!"))
                    goto(ResourcesMenu)
                case 4:
                    msgbox(format("The tutorials master page located on GitHub at pret/pokeemerald/wiki/Tutorials was an invaluable resource for locating guides to many of the changes incorporated into this game."))
                    goto(ResourcesMenu)
                default:
                    goto(CreditsMenu)
            }
        case 1:
            FeaturesMenu:
            msgbox(format("Features will be listed by order of inclusion into this project."))
            msgbox(format("Which kind of features would you like to hear about?"))
            dynmultichoice(0,0,FALSE,6,0,DYN_MULTICHOICE_CB_NONE, "Player quality of life", "Creator quality of life", "Minor tweaks and bug fixes")
            switch(var(VAR_RESULT)) {
                case 0: // Player QOL
                    msgbox(format("Nature stat colors, by DizzyEgg."))
                    msgbox(format("Bag sorting, by ghoulslash."))
                    msgbox(format("IV/EV summary screen, by BuffelSaft."))
                    msgbox(format("IV/EV button promts, by RavePossum."))
                    msgbox(format("Increased bag stack size, by MapleFall."))
                    msgbox(format("Fast Berry interactions, by dunsparce9."))
                    msgbox(format("Berry trees remain until picked, by BuffelSaft."))
                    msgbox(format("Mart items by badge count, by ghoulslash."))
                    msgbox(format("Swap Poké Balls via bag use, by Lunos."))
                    msgbox(format("Match call only for rematch, by devolov."))
                    msgbox(format("Nickname Pokémon from party menu, by Shinny456, TheXaman, Lunos and Zadien."))
                    msgbox(format("Use HMs as long as a party Pokémon could learn them, by devolov and ScyrousFX."))
                    msgbox(format("Relearn moves from party menu, by Diego Mertens."))
                    msgbox(format("Instead of ask to stop learning moves, ask to continue learning, by devolov."))
                    msgbox(format("Repeated field medicine use, by ghoulslash, AsparagusEduardo, and Alex N."))
                    msgbox(format("Swap party Pokémon with select button, by Lunos."))
                    msgbox(format("Display Hidden Power type in battle, by Lunos."))
                    goto(FeaturesMenu)
                case 1: // Creator QOL
                    msgbox(format("Generic item ball script, by Deokishisu."))
                    msgbox(format("Dynamic multichoice, by SBird."))
                    msgbox(format("Decapitalization, by AsparagusEduardo."))
                    msgbox(format("Emerald textbox simulator, by Meejle."))
                    msgbox(format("Jinnora's implementation of an Egg move tutor borrowed a lot of code from Surskitty's tutor_expansion branch."))
                    msgbox(format("Set wild levels dynamically, by Hestia."))
                    msgbox(format("Get or Set a Pokémon's Seen/Caught flag specials, by Lunos."))
                    msgbox(format("Removing EVs from stat calculations for no grinding mode was based on a Discord comment by Lunos."))
                    goto(FeaturesMenu)
                case 2: // Tweaks/Bugfixes
                    msgbox(format("Disable unnecessary Union Room check, from the tutorial master list."))
                    msgbox(format("Surf dismount ground effects, from the tutorial master list."))
                    msgbox(format("Lanette's PC from game start, by devolov."))
                    msgbox(format("Change Birch's intro Pokémon, by Avara."))
                    msgbox(format("Modify Pickup items, by Lunos."))
                    msgbox(format("Change default text speed, by Avara."))
                    msgbox(format("Allow forgetting of HM moves, by Lunos, thespbgamer, and Jaizu."))
                    msgbox(format("Poison Heal protects from overworld poison, by Lunos."))
                    msgbox(format("Rainy routes fully water berries, by BuffelSaft."))
                    msgbox(format("Proper item pluralization, by ghoulslash and Jaizu."))
                    msgbox(format("A held Cleanse Tag in your party avoids all wild encounters, by devolov."))
                    msgbox(format("Use/Register only shows on Key Items with those options, by voloved."))
                    msgbox(format("Using Soot Sack shows ash collected, by Sapphire Jester."))
                    msgbox(format("HGSS_Dex Darkest mode, by RavePossum."))
                    msgbox(format("Additional NPC walking animations, by Bivurnum."))
                    goto(FeaturesMenu)
                default:
                    goto(CreditsMenu)
            }
        case 2:
            InspirationMenu:
            msgbox(format("Which sources of inspiration would you like to know about?"))
            dynmultichoice(0,0,FALSE,6,0,DYN_MULTICHOICE_CB_NONE, "Other Pokémon hacks/fangames", "Official Pokémon media", "Other sources")
            switch(var(VAR_RESULT)) {
                case 0:
                    msgbox(format("Jinnora has played a lot of Pokémon hacks since 2009 or so, and the idea for this game came while playing Inclement Emerald by BuffelSaft."))
                    msgbox(format("Radical Red by soupercell is the hack she's played most in recent years. Another favorite is Emerald Rogue by Pokabbie."))
                    msgbox(format("The idea for the bike bridges on Routes 103 and 118 came from the Emerald difficulty hack Run & Bun, by dekzeh."))
                    msgbox(format("Dewford Resort and Verdant Forest were partially inspired by similar areas in Inclement Emerald by BuffelSaft."))
                    goto(InspirationMenu)
                case 1:
                    msgbox(format("Meteor Village was inspired by the Draconid settlement which appears in the Pokémon Adventures manga."))
                    msgbox(format("Millennium Field and Forina draw inspiration from M06 “Jirachi: Wish Maker.”"))
                    msgbox(format("The Oldale Ruins appear in AG002 “A Ruin with a View.”"))
                    msgbox(format("The Valley of Steel appears in AG058 “All Torkoal, No Play.”"))
                    msgbox(format("Crossgate Hills was inspired by Crossgate Town from AG080 “That's Just Swellow.”"))
                    msgbox(format("Monsu Island appears in AG097 “Gaining Groudon” and AG098 “The Scuffle of Legends.”"))
                    goto(InspirationMenu)
                case 2:
                    msgbox(format("Sakurai Overlook was inspired by real life areas near Fukuoka, Japan."))
                    msgbox(format("The Beach Battle was inspired by the “Brawl on the Beach” section of the fanfic “Borne of Caution” by Fuggmann (Act 1, Ch. 14-15)."))
                    msgbox(format("Most trainers in Victory Road are references to VGC World Champions."))
                    msgbox(format("A trainer in Victory Road is a direct reference to the main character of the fanfic “I Will Touch the Skies” by Soussouni."))
                    msgbox(format("Three trainers appearing on Route 132 are references to Twitch Plays Pokémon."))
                    msgbox(format("A trainer in Seafloor Cavern references the Emerald Kaizo nuzlocke by Pokémon Challenges."))
                    msgbox(format("Most of the added in-game trades are direct references to popular culture or Pokémon content creators."))
                    msgbox(format("Pokémon content creators referenced include Pokémon Challenges, FlygonHG, and Smallant."))
                    goto(InspirationMenu)
                default:
                    goto(CreditsMenu)
            }
        case 3:
            goto(CreditsIntro)
        default:
    }
    msgbox(format("Be seeing you!"))
    release
    end
}



// Explore Mode scripts
script EverGrandeCity_Headquarters_1F_EventScript_ExploreModeTwin {
    lock
    faceplayer
    goto_if_le(VAR_EVER_GRANDE_CITY_STATE, 11, EverGrandeCity_Headquarters_1F_EventScript_GoCheckIn)
    msgbox(format("Hi! I'm the Explore Mode Girl."))
    if(flag(FLAG_DEPARTED_EVER_GRANDE)) {
        if(flag(FLAG_EXPLORE_MODE)) {
            goto(EverGrandeCity_Headquarters_1F_EventScript_ExploreModeGifts)
        }
        msgbox(format("If you want to play on Explore Mode, you could always start a new save and talk to me before leaving Ever Grande."))
        release
        end
    }
    ExploreModeMenu:
    dynmultipush("Explore Mode Information", 1)
    if(flag(FLAG_EXPLORE_MODE)) {
        dynmultipush("I don't want Explore Mode anymore", 3)
        dynmultipush("Give me useful items", 4)
    } else {
        dynmultipush("Activate Explore Mode", 2)
    }
    msgbox(format("How can I help?"))
    dynmultistack(0,0,FALSE,6,FALSE,1,DYN_MULTICHOICE_CB_NONE)
    switch(var(VAR_RESULT)) {
        case 1:
            msgbox(format("Fighting tough Pokémon is scary…"))
            msgbox(format("Sometimes you just want to travel the world and relax."))
            msgbox(format("Explore Mode turns off NPC Trainer vision, so you only have to battle when you choose!"))
            msgbox(format("I'll also give you lots of helpful items for free."))
        case 2:
            msgbox(format("You CANNOT disable Explore Mode once activated."))
            msgbox(format("All other difficulty options will also be configured to the easiest settings."))
            msgbox(format("Would you like to activate Explore Mode now?"), MSGBOX_YESNO)
            goto_if_eq(VAR_RESULT, YES, EverGrandeCity_Headquarters_1F_EventScript_ExploreModeActivate)
            msgbox(format("Okay! You're braver than me!"))
        case 3:
            msgbox(format("As you were warned, you CANNOT disable Explore Mode once activated."))
            msgbox(format("You'll have to start a new save file."))
        case 4:
            goto(EverGrandeCity_Headquarters_1F_EventScript_ExploreModeGifts)
        default:
            msgbox(format("Have fun!"))
            release
            end
    }
    goto(ExploreModeMenu)
}

script EverGrandeCity_Headquarters_1F_EventScript_ExploreModeGifts {
    //push all options here
    dynmultipush("Money", 1)
    dynmultipush("Bottle Caps", 2)
    dynmultipush("Heart Scales and Shards", 3)
    dynmultipush("HMs", 4)
    dynmultipush("HM Pokémon", 5)
    //should have infinite candy, so no need to give rare candies once implemented
    dynmultipush("Rare Candies", 6)
    dynmultipush("Toggle Trainer vision", 7)
    msgbox(format("What do you need?"))
    dynmultistack(0,0,FALSE,6,FALSE,1,DYN_MULTICHOICE_CB_NONE)
    switch(var(VAR_RESULT)) {
        case 1:
            showmoneybox(0,0)
            addmoney(500000)
            hidemoneybox
            msgbox(format("Here you go!"))
        case 2:
            giveitem(ITEM_BOTTLE_CAP, 36)
            giveitem(ITEM_GOLD_BOTTLE_CAP, 6)
        case 3:
            giveitem(ITEM_HEART_SCALE, 20)
            giveitem(ITEM_RED_SHARD, 10)
            giveitem(ITEM_BLUE_SHARD, 10)
            giveitem(ITEM_GREEN_SHARD, 10)
            giveitem(ITEM_YELLOW_SHARD, 10)
        case 4:
            call(Gym_EventScript_ChooseHM)
        case 5:
            msgbox(format("I will give you a Tropius and a Wailord."), MSGBOX_YESNO)
            goto_if_eq(VAR_RESULT, NO, EverGrandeCity_Headquarters_1F_EventScript_ExploreModeGifts)
            playfanfare(MUS_OBTAIN_ITEM)
            givemon(SPECIES_TROPIUS, 5, ITEM_SMOKE_BALL)
            givemon(SPECIES_WAILORD, 5, ITEM_SMOKE_BALL)
            msgbox(format("Done! Check your party or the PC!"))
        case 6:
            giveitem(ITEM_RARE_CANDY, 99)
        case 7:
            call(EverGrandeCity_Headquarters_1F_EventScript_ExploreModeTrainerSeeToggle)
        default:
            msgbox(format("Have fun!"))
            release
            end
    }
    closemessage
    goto(EverGrandeCity_Headquarters_1F_EventScript_ExploreModeGifts)

}

script EverGrandeCity_Headquarters_1F_EventScript_ExploreModeActivate {
    playfanfare(MUS_OBTAIN_TMHM)

    //critical state flags
    setflag(FLAG_EXPLORE_MODE)
    setflag(FLAG_DEPARTED_EVER_GRANDE)

    //clear challenge flags
    clearflag(FLAG_CHALLENGE_HM_RANDOM)
    clearflag(FLAG_CHALLENGE_HM_NONE)

    //set difficulty to easy
    setvar(VAR_DIFFICULTY_SETTING, 1)

    //trainer vision
    setflag(FLAG_NO_TRAINER_SEE)
    msgbox(format("Explore Mode enabled!"))
    msgbox(format("You can find me on the second floor of any Pokémon Center if you want gifts."))
    msgbox(format("Want anything right now?"), MSGBOX_YESNO)
    goto_if_eq(VAR_RESULT, YES, EverGrandeCity_Headquarters_1F_EventScript_ExploreModeGifts)
    msgbox(format("Have fun!"))
    release
    end
}

script EverGrandeCity_Headquarters_1F_EventScript_ExploreModeTrainerSeeToggle {
    if(flag(FLAG_NO_TRAINER_SEE)) {
        msgbox(format("Enable NPC Trainer vision?"), MSGBOX_YESNO)
        goto_if_eq(VAR_RESULT, NO, Common_EventScript_NopReturn)
        playfanfare(MUS_OBTAIN_TMHM)
        clearflag(FLAG_NO_TRAINER_SEE)
        msgbox(format("NPC Trainer vision re-enabled!"))
    } else {
        msgbox(format("Disable NPC Trainer vision?"), MSGBOX_YESNO)
        goto_if_eq(VAR_RESULT, NO, Common_EventScript_NopReturn)
        playfanfare(MUS_OBTAIN_TMHM)
        setflag(FLAG_NO_TRAINER_SEE)
        msgbox(format("NPC Trainer vision disabled!"))
    }
    return
}



// Other NPC scripts
script EverGrandeCity_Headquarters_1F_EventScript_Beauty {
	lock
	faceplayer
	msgbox(format("Government buildings are surprisingly mundane. You think it's all high-security and labyrinthine bureaucracy, but it's just full of regular office workers."))
    msgbox(format("Action movies lied to me! Why can't reality be more like fiction?"))
	release
	end
}

script EverGrandeCity_Headquarters_1F_EventScript_SecurityMan {
	lock
	faceplayer
    goto_if_set(FLAG_TEMP_1, OhNoAirPods)
    setflag(FLAG_TEMP_1)
	msgbox(format("I'm a security officer. Check out my badge! You should respect my authority, or else!"))
    release
    end

    OhNoAirPods:
    msgbox(format("Seriously, though, I just stand here and watch for people getting too rowdy. I'm extremely bored! They confiscated my airpods last week."))
	release
	end
}