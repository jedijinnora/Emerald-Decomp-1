mapscripts MossdeepCaverns_MeditationPool_MapScripts {}


script MossdeepCaverns_MeditationPool_EventScript_TateAndLiza {
    lock
    faceplayer
    msgbox(format("Tate: Hello…\nLiza: {PLAYER}!"))
    call_if_unset(FLAG_MET_PSYCHIC_TUTOR, MossdeepCaverns_MeditationPool_EventScript_PsychicSpecialistInfo)
    goto(MossdeepCaverns_MeditationPool_EventScript_PsychicSpecialistMenu)
}

script MossdeepCaverns_MeditationPool_EventScript_PsychicSpecialistInfo {
    msgbox(format("We're Tate and Liza! We're twins!"))
    msgbox(format("If you defeat our Psychic-type Pokémon in battle, we will offer to teach you various Psychic-type moves."))
    msgbox(format("There are three battles available: a standard double battle, a double battle with inverse type matchups, and a challenge battle where you must bring only Psychic-type Pokémon."))
    setflag(FLAG_MET_PSYCHIC_TUTOR)
    return
}

script MossdeepCaverns_MeditationPool_EventScript_GivePsychicGem {
    msgbox(format("Here, this item boosts the power of one Psychic-type move per battle."))
    giveitem(ITEM_PSYCHIC_GEM)
    goto_if_eq(VAR_RESULT, FALSE, Common_EventScript_ShowBagIsFull)
    setflag(FLAG_RECEIVED_PSYCHIC_GEM)
    return
}

script MossdeepCaverns_MeditationPool_EventScript_PsychicSpecialistMenu {
    msgbox(format("Tate: How can we…\nLiza: Help you today?"))
    dynmultipush("Information", 0)
    dynmultipush("Move Tutor", 1)
    dynmultipush("Battle", 2)
    dynmultistack(0,0,FALSE,6,TRUE,0,DYN_MULTICHOICE_CB_NONE)
    switch(var(VAR_RESULT)) {
        case 0:
            call(MossdeepCaverns_MeditationPool_EventScript_PsychicSpecialistInfo)
        case 1:
            call(MossdeepCaverns_MeditationPool_EventScript_PsychicSpecialistTutor)
        case 2:
            call(MossdeepCaverns_MeditationPool_EventScript_PsychicSpecialistBattle)
        default:
            msgbox(format("Tate: We can see the future…\nLiza: So we know you'll be back!"), MSGBOX_AUTOCLOSE)
            release
            end
    }
    goto(MossdeepCaverns_MeditationPool_EventScript_PsychicSpecialistMenu)
}

script MossdeepCaverns_MeditationPool_EventScript_PsychicSpecialistTutor {
    call(MossdeepCaverns_MeditationPool_EventScript_PsychicSpecialistCheckMoves)
    call_if_defeated(TRAINER_TATE_AND_LIZA_INITIAL, MossdeepCaverns_MeditationPool_EventScript_PsychicSpecialistInitialUnlock)
    call_if_defeated(TRAINER_TATE_AND_LIZA_INVERSE, MossdeepCaverns_MeditationPool_EventScript_PsychicSpecialistInverseUnlock)
    call_if_defeated(TRAINER_TATE_AND_LIZA_CHALLENGE, MossdeepCaverns_MeditationPool_EventScript_PsychicSpecialistChallengeUnlock)
    call(MossdeepCaverns_MeditationPool_EventScript_PsychicSpecialistUnlockOtherTutor)
    msgbox(format("Which move should we teach?"))
    dynmultistack(0,0,FALSE,6,FALSE,0,DYN_MULTICHOICE_CB_NONE)
    switch(var(VAR_RESULT)) {
        case 11:
            setvar(VAR_0x8005, MOVE_MAGIC_COAT)
        case 12:
            setvar(VAR_0x8005, MOVE_MIRROR_COAT)
        case 13:
            setvar(VAR_0x8005, MOVE_IMPRISON)
        case 14:
            setvar(VAR_0x8005, MOVE_SPEED_SWAP)
        case 21:
            setvar(VAR_0x8005, MOVE_HYPNOSIS)
        case 22:
            setvar(VAR_0x8005, MOVE_DREAM_EATER)
        case 23:
            setvar(VAR_0x8005, MOVE_GRAVITY)
        case 24:
            setvar(VAR_0x8005, MOVE_COSMIC_POWER)
        case 31:
            setvar(VAR_0x8005, MOVE_ALLY_SWITCH)
        case 32:
            setvar(VAR_0x8005, MOVE_EXPANDING_FORCE)
        case 33:
            setvar(VAR_0x8005, MOVE_STORED_POWER)
        case 41:
            setvar(VAR_0x8005, MOVE_PSYCHIC_FANGS)
        case 42:
            setvar(VAR_0x8005, MOVE_PSYCHIC_TERRAIN)
        case 43:
            setvar(VAR_0x8005, MOVE_PSYWAVE)
        case 44:
            setvar(VAR_0x8005, MOVE_PSYCHO_CUT)
        default:
            return
    }
    call(MoveTutor_EventScript_OpenPartyMenu)
    msgbox(format("Continue teaching moves?"), MSGBOX_YESNO)
    goto_if_eq(VAR_RESULT, YES, MossdeepCaverns_MeditationPool_EventScript_PsychicSpecialistTutor)
    return
}

script MossdeepCaverns_MeditationPool_EventScript_PsychicSpecialistCheckMoves {
    goto_if_defeated(TRAINER_TATE_AND_LIZA_INITIAL, Common_EventScript_NopReturn)
    goto_if_defeated(TRAINER_TATE_AND_LIZA_INVERSE, Common_EventScript_NopReturn)
    goto_if_defeated(TRAINER_TATE_AND_LIZA_CHALLENGE, Common_EventScript_NopReturn)
    goto_if_defeated(TRAINER_BITE_TUTOR, Common_EventScript_NopReturn)
    goto_if_defeated(TRAINER_TERRAIN_TUTOR_PSYCHIC, Common_EventScript_NopReturn)
    goto_if_set(FLAG_MET_THOMSON_SET_DAMAGE_MOVES, Common_EventScript_NopReturn)
    goto_if_defeated(TRAINER_CRITICAL_TUTOR, Common_EventScript_NopReturn)
    msgbox(format("You haven't unlocked any moves yet."))
    goto(MossdeepCaverns_MeditationPool_EventScript_PsychicSpecialistMenu)
}

script MossdeepCaverns_MeditationPool_EventScript_PsychicSpecialistInitialUnlock {
    dynmultipush("Magic Coat", 11)
    dynmultipush("Mirror Coat", 12)
    dynmultipush("Imprison", 13)
    dynmultipush("Speed Swap", 14)
    return
}

script MossdeepCaverns_MeditationPool_EventScript_PsychicSpecialistInverseUnlock {
    dynmultipush("Hypnosis", 21)
    dynmultipush("Dream Eater", 22)
    dynmultipush("Gravity", 23)
    dynmultipush("Cosmic Power", 24)
    return
}

script MossdeepCaverns_MeditationPool_EventScript_PsychicSpecialistChallengeUnlock {
    dynmultipush("Ally Switch", 31)
    dynmultipush("Expanding Force", 32)
    dynmultipush("Stored Power", 33)
    return
}

script MossdeepCaverns_MeditationPool_EventScript_PsychicSpecialistUnlockOtherTutor {
    if (defeated(TRAINER_BITE_TUTOR)) {
        dynmultipush("Psychic Fangs", 41)
    }
    if (defeated(TRAINER_TERRAIN_TUTOR_PSYCHIC)) {
        dynmultipush("Psychic Terrain", 42)
    }
    if(flag(FLAG_MET_THOMSON_SET_DAMAGE_MOVES)) {
        dynmultipush("Psywave", 43)
    }
    if (defeated(TRAINER_CRITICAL_TUTOR)) {
        dynmultipush("Psycho Cut", 44)
    }
    return
}

script MossdeepCaverns_MeditationPool_EventScript_PsychicSpecialistBattle {
    dynmultipush("Standard double battle", 1)
    dynmultipush("Inverse double battle", 2)
    dynmultipush("Psychic-only double battle", 3)
    msgbox(format("Tate: Which combination of ours…\nLiza: Do you wish to face?"))
    dynmultistack(0,0,FALSE,6,TRUE,0,DYN_MULTICHOICE_CB_NONE)
    switch(var(VAR_RESULT)) {
        case 1:
            call(MossdeepCaverns_MeditationPool_EventScript_InitialBattle)
        case 2:
            call(MossdeepCaverns_MeditationPool_EventScript_InverseBattle)
        case 3:
            call(MossdeepCaverns_MeditationPool_EventScript_ChallengeBattle)
            call_if_unset(FLAG_RECEIVED_PSYCHIC_GEM, MossdeepCaverns_MeditationPool_EventScript_GivePsychicGem)
        default:
            return
    }
    call_if_unset(FLAG_ITEM_TM70, MossdeepCaverns_MeditationPool_EventScript_GiveCalmMind)
    release
    end
}

script MossdeepCaverns_MeditationPool_EventScript_InitialBattle {
    if(!defeated(TRAINER_TATE_AND_LIZA_INITIAL)) {
        msgbox(format("Liza: If you win against us in an standard double battle…"))
        msgbox(format("Tate: We will teach you Magic Coat, Mirror Coat, Imprison, and Speed Swap."))
        setflag(FLAG_TEMP_11)
    }
    msgbox(format("Ready for me to ride you like a wave?"), MSGBOX_YESNO)
    goto_if_eq(VAR_RESULT, NO, MossdeepCaverns_MeditationPool_EventScript_PsychicSpecialistMenu)
    trainerbattle_no_intro(TRAINER_TATE_AND_LIZA_INITIAL, MossdeepCaverns_MeditationPool_Text_TateAndLizaDefeated)
    if(flag(FLAG_TEMP_11)) {
        msgbox(format("Added Magic Coat, Mirror Coat, Imprison, and Speed Swap to the tutor list."))
        clearflag(FLAG_TEMP_11)
    }
    return
}

script MossdeepCaverns_MeditationPool_EventScript_InverseBattle {
    if(!defeated(TRAINER_TATE_AND_LIZA_INVERSE)) {
        msgbox(format("Liza: If you win against us in an inverse battle…"))
        msgbox(format("Tate: We will teach you Hypnosis, Dream Eater, Gravity, and Cosmic Power."))
        setflag(FLAG_TEMP_11)
    }
    msgbox(format("Ready for me to flip your board?"), MSGBOX_YESNO)
    goto_if_eq(VAR_RESULT, NO, MossdeepCaverns_MeditationPool_EventScript_PsychicSpecialistMenu)
    setflag(FLAG_INVERSE_BATTLE)
    trainerbattle_no_intro(TRAINER_TATE_AND_LIZA_INVERSE, MossdeepCaverns_MeditationPool_Text_TateAndLizaDefeated)
    clearflag(FLAG_INVERSE_BATTLE)
    if(flag(FLAG_TEMP_11)) {
        msgbox(format("Added Hypnosis, Dream Eater, Gravity, and Cosmic Power to the tutor list."))
        clearflag(FLAG_TEMP_11)
    }
    return
}

script MossdeepCaverns_MeditationPool_EventScript_ChallengeBattle {
    setvar(VAR_0x8004, TYPE_PSYCHIC)
    specialvar(VAR_RESULT, CheckPartyMonotype)
    goto_if_eq(VAR_RESULT, FALSE, MossdeepCaverns_MeditationPool_EventScript_NotPsychicMonotype)
    if(!defeated(TRAINER_TATE_AND_LIZA_CHALLENGE)) {
        msgbox(format("Liza: If you win against us with all Psychic-type Pokémon…"))
        msgbox(format("Tate: We will teach you Ally Switch, Expanding Force, and Stored Power."))
        setflag(FLAG_TEMP_11)
    }
    msgbox(format("It's the ultimate throw-down! You ready?"), MSGBOX_YESNO)
    goto_if_eq(VAR_RESULT, NO, MossdeepCaverns_MeditationPool_EventScript_PsychicSpecialistMenu)
    trainerbattle_no_intro(TRAINER_TATE_AND_LIZA_CHALLENGE, MossdeepCaverns_MeditationPool_Text_TateAndLizaDefeated)
    if(flag(FLAG_TEMP_11)) {
        msgbox(format("Added Ally Switch, Expanding Force, and Stored Power to the tutor list."))
        clearflag(FLAG_TEMP_11)
    }
    return
}

script MossdeepCaverns_MeditationPool_EventScript_NotPsychicMonotype {
    msgbox(format("You have a Pokémon that's not a Psychic type."))
    release
    end
}

script MossdeepCaverns_MeditationPool_EventScript_GiveCalmMind {
    msgbox(format("Tate: It can't be helped. You've won…"))
    msgbox(format("Liza: So in recognition, take this!"))
    giveitem(ITEM_TM70_CALM_MIND)
    goto_if_eq(VAR_RESULT, FALSE, Common_EventScript_ShowBagIsFull)
    setflag(FLAG_ITEM_TM70)
    msgbox(format("Tate: That TM contains…\nLiza: Calm Mind!"))
    msgbox(format("Tate: It raises Sp. Atk and…\nLiza: It raise Sp. Def!"))
    msgbox(format("Tate: It's a move that's perfect\nLiza: For Psychic Pokémon!"))
    return
}

text MossdeepCaverns_MeditationPool_Text_TateAndLizaDefeated {
    "Tate: What? Our combination…\nLiza: Was shattered!"
}



script MossdeepCaverns_MeditationPool_EventScript_BlackBelt {
    lock
    faceplayer
    msgbox(format("Hiyah!"))
    setflag(FLAG_TUTOR_PUNCH_MOVES)
    dynmultipush("Move Tutor", 1)
    dynmultipush("Battle", 2)
    dynmultistack(0,0,FALSE,6,TRUE,0,DYN_MULTICHOICE_CB_NONE)
    switch(var(VAR_RESULT)) {
        case 1:
            call(MossdeepCaverns_MeditationPool_EventScript_PunchTutor)
        case 2:
            call(MossdeepCaverns_MeditationPool_EventScript_PunchBattle)
        default:
    }
    msgbox(format("Go pound sand!"))
    release
    end
}

script MossdeepCaverns_MeditationPool_EventScript_PunchTutor {
    dynmultipush("Mega Punch", 11)
    dynmultipush("Dynamic Punch", 12)
    if(defeated(TRAINER_PUNCH_TUTOR)) {
        dynmultipush("Bullet Punch", 21)
        dynmultipush("Mach Punch", 22)
        dynmultipush("Shadow Punch", 23)
        dynmultipush("Focus Punch", 24)
        dynmultipush("Power-Up Punch", 25)
    }
    msgbox(format("Which move should I teach?"))
    dynmultistack(0,0,FALSE,6,FALSE,0,DYN_MULTICHOICE_CB_NONE)
    switch(var(VAR_RESULT)) {
        case 11:
            setvar(VAR_0x8005, MOVE_MEGA_PUNCH)
        case 12:
            setvar(VAR_0x8005, MOVE_DYNAMIC_PUNCH)
        case 21:
            setvar(VAR_0x8005, MOVE_BULLET_PUNCH)
        case 22:
            setvar(VAR_0x8005, MOVE_MACH_PUNCH)
        case 23:
            setvar(VAR_0x8005, MOVE_SHADOW_PUNCH)
        case 24:
            setvar(VAR_0x8005, MOVE_FOCUS_PUNCH)
        case 25:
            setvar(VAR_0x8005, MOVE_POWER_UP_PUNCH)
        default:
            return
    }
    call(MoveTutor_EventScript_OpenPartyMenu)
    msgbox(format("Continue teaching moves?"), MSGBOX_YESNO)
    goto_if_eq(VAR_RESULT, YES, MossdeepCaverns_MeditationPool_EventScript_PunchTutor)
    return
}

script MossdeepCaverns_MeditationPool_EventScript_PunchBattle {
    msgbox(format("Hah! My Pokémon will punch your lights out!"), MSGBOX_YESNO)
    goto_if_eq(VAR_RESULT, NO, MossdeepCaverns_MeditationPool_EventScript_PunchBattleDeclined)
    trainerbattle_no_intro(TRAINER_BITE_TUTOR, MossdeepCaverns_MeditationPool_Text_PunchDefeat)
    return
}

script MossdeepCaverns_MeditationPool_EventScript_PunchBattleDeclined {
    msgbox(format("No? But your Pokémon need to learn proper punching form!"))
    release
    end
}

text MossdeepCaverns_MeditationPool_Text_PunchDefeat {
    "I feel like a punching bag…"
}



script MossdeepCaverns_MeditationPool_EventScript_Girl {
    msgbox(format("I prefer quiet. If you fight a Pokémon battle in here, please keep it down."), MSGBOX_NPC)
    end
}

script MossdeepCaverns_MeditationPool_EventScript_ExpertF {
    msgbox(format("I stay fit by doing yoga each morning."), MSGBOX_NPC)
    end
}

script MossdeepCaverns_MeditationPool_EventScript_TriathleteM {
    msgbox(format("I gotta train harder to beat Tate and Liza!"), MSGBOX_NPC)
    end
}