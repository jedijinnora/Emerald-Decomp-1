const LOCALID_SHAYMIN = 12

mapscripts Route129_MapScripts {
	MAP_SCRIPT_ON_RESUME : Route129_OnResume
	MAP_SCRIPT_ON_TRANSITION : Route129_OnTransition
}

script Route129_OnResume {
	call_if_set(FLAG_SYS_CTRL_OBJ_DELETE, Common_EventScript_TryRemoveCaughtEncounter)
	end
}

script Route129_OnTransition {
	setflag(FLAG_TEMP_11)
	call(Common_EventScript_DisableBPReward)
	end
}

script Route129_EventScript_ShayminShrub {
	lock
	setflag(FLAG_LANDMARK_FLOWER_PARADISE)
	msgbox(format("It's a pile of moss and tiny flowers."))
	call_if_set(FLAG_SYS_GAME_CLEAR, Route129_EventScript_TrySetupShayminBattle)
	release
	end
}

script Route129_EventScript_TrySetupShayminBattle {
	goto_if_set(FLAG_CAUGHT_SHAYMIN, Common_EventScript_NopReturn)
	goto_if_set(FLAG_DEFEATED_SHAYMIN, Common_EventScript_NopReturn)
	msgbox(format("Oh?"))
	playmoncry(SPECIES_SHAYMIN, CRY_MODE_ENCOUNTER)
	delay(40)
	playse(SE_PIN)
	applymovement(OBJ_EVENT_ID_PLAYER, Common_Movement_ExclamationMark)
	waitmovement(0)
	clearflag(FLAG_TEMP_11)
	addobject(LOCALID_SHAYMIN)
	return
}

script Route129_EventScript_Shaymin {
	lock
	faceplayer
	playmoncry(SPECIES_SHAYMIN, CRY_MODE_ENCOUNTER)
	delay(40)
	waitmoncry
	setflag(FLAG_SMART_WILD_AI)
	createmon(1, 0, SPECIES_SHAYMIN, 90, ITEM_LUM_BERRY, move1=MOVE_ENERGY_BALL, move2=MOVE_LEECH_SEED, move3=MOVE_AROMATHERAPY, move4=MOVE_SECRET_POWER)
	setflag(FLAG_SYS_CTRL_OBJ_DELETE)
	special(BattleSetup_StartLegendaryBattle)
	waitstate
	clearflag(FLAG_SYS_CTRL_OBJ_DELETE)
	clearflag(FLAG_SMART_WILD_AI)
	specialvar(VAR_RESULT, GetBattleOutcome)
	goto_if_eq(VAR_RESULT, B_OUTCOME_WON, Route129_EventScript_DefeatedShaymin)
	goto_if_eq(VAR_RESULT, B_OUTCOME_RAN, Route129_EventScript_RanFromShaymin)
	goto_if_eq(VAR_RESULT, B_OUTCOME_PLAYER_TELEPORTED, Route129_EventScript_RanFromShaymin)
	setflag(FLAG_CAUGHT_SHAYMIN)
	release
	end
}

script Route129_EventScript_DefeatedShaymin {
	setflag(FLAG_DEFEATED_SHAYMIN)
	goto(Common_EventScript_RemoveStaticPokemon)
	end
}

script Route129_EventScript_RanFromShaymin {
	setflag(FLAG_DEFEATED_SHAYMIN)
	setvar(VAR_0x8004, SPECIES_SHAYMIN)
	goto(Common_EventScript_LegendaryFlewAway)
	end
}

script Route129_EventScript_Beauty {
	lock
	faceplayer
	setflag(FLAG_LANDMARK_FLOWER_PARADISE)
	msgbox(format("This island reminds me of a place in Sinnoh I once visited."))
	goto_if_set(FLAG_CAUGHT_SHAYMIN, Route129_EventScript_BeautyCaughtShaymin)
	release
	end
}

script Route129_EventScript_BeautyCaughtShaymin {
	msgbox(format("Maybe you could take Shaymin there one day?"))
	release
	end
}

script Route129_EventScript_Sign {
	setflag(FLAG_LANDMARK_FLOWER_PARADISE)
	msgbox("Route 129\nFlower Paradise", MSGBOX_SIGN)
	end
}

script Route129_EventScript_Chase {
	trainerbattle_single(TRAINER_CHASE, Route129_Text_ChaseIntro, Route129_Text_ChaseDefeat)
	msgbox(Route129_Text_ChasePostBattle, MSGBOX_AUTOCLOSE)
	call(Route129_EventScript_TryChaseRematch)
	release
	end
}
script Route129_EventScript_TryChaseRematch {
	lock
    call(Common_EventScript_ShouldDoRematch)
	goto_if_eq(VAR_RESULT, FALSE, Common_EventScript_NopReturn)
	setvar(VAR_0x8003, TRAINER_CHASE)
	setvar(VAR_0x8004, 1)
	call(Common_EventScript_CheckRecentRematchesSetBP)
	trainerbattle_no_intro(TRAINER_CHASE, Route129_Text_ChaseDefeat)
	special(UpdateRecentTrainers)
	return
}

script Route129_EventScript_Allison {
	trainerbattle_single(TRAINER_ALLISON, Route129_Text_AllisonIntro, Route129_Text_AllisonDefeat)
	msgbox(Route129_Text_AllisonPostBattle, MSGBOX_AUTOCLOSE)
	call(Route129_EventScript_TryAllisonRematch)
	release
	end
}
script Route129_EventScript_TryAllisonRematch {
	lock
    call(Common_EventScript_ShouldDoRematch)
	goto_if_eq(VAR_RESULT, FALSE, Common_EventScript_NopReturn)
	setvar(VAR_0x8003, TRAINER_ALLISON)
	setvar(VAR_0x8004, 1)
	if (defeated(TRAINER_ALLISON)) {
		msgbox(format("Include Reed and make it a double battle?"), MSGBOX_YESNO)
		if (var(VAR_RESULT) == YES) {
			trainerbattle(TRAINER_BATTLE_SET_TRAINER_B, TRAINER_ALLISON, 0, NULL, Route129_Text_ReedDefeat)
			addvar(VAR_0x8004, 1)
		}
	}
	call(Common_EventScript_CheckRecentRematchesSetBP)
	trainerbattle_no_intro(TRAINER_ALLISON, Route129_Text_AllisonDefeat)
	special(UpdateRecentTrainers)
	return
}

script Route129_EventScript_Reed {
	trainerbattle_single(TRAINER_REED, Route129_Text_ReedIntro, Route129_Text_ReedDefeat)
	msgbox(Route129_Text_ReedPostBattle, MSGBOX_AUTOCLOSE)
	call(Route129_EventScript_TryReedRematch)
	release
	end
}
script Route129_EventScript_TryReedRematch {
	lock
    call(Common_EventScript_ShouldDoRematch)
	goto_if_eq(VAR_RESULT, FALSE, Common_EventScript_NopReturn)
	setvar(VAR_0x8003, TRAINER_REED)
	setvar(VAR_0x8004, 1)
	if (defeated(TRAINER_ALLISON)) {
		msgbox(format("Include Allison and make it a double battle?"), MSGBOX_YESNO)
		if (var(VAR_RESULT) == YES) {
			trainerbattle(TRAINER_BATTLE_SET_TRAINER_B, TRAINER_ALLISON, 0, NULL, Route129_Text_AllisonDefeat)
			addvar(VAR_0x8004, 1)
		}
	}
	call(Common_EventScript_CheckRecentRematchesSetBP)
	trainerbattle_no_intro(TRAINER_REED, Route129_Text_ReedDefeat)
	special(UpdateRecentTrainers)
	return
}

script Route129_EventScript_Tisha {
	trainerbattle_single(TRAINER_TISHA, Route129_Text_TishaIntro, Route129_Text_TishaDefeat)
	msgbox(Route129_Text_TishaPostBattle, MSGBOX_AUTOCLOSE)
	call(Route129_EventScript_TryTishaRematch)
	release
	end
}
script Route129_EventScript_TryTishaRematch {
	lock
    call(Common_EventScript_ShouldDoRematch)
	goto_if_eq(VAR_RESULT, FALSE, Common_EventScript_NopReturn)
	setvar(VAR_0x8003, TRAINER_TISHA)
	setvar(VAR_0x8004, 1)
	call(Common_EventScript_CheckRecentRematchesSetBP)
	trainerbattle_no_intro(TRAINER_TISHA, Route129_Text_TishaDefeat)
	special(UpdateRecentTrainers)
	return
}

script Route129_EventScript_Clarence {
	trainerbattle_single(TRAINER_CLARENCE, Route129_Text_ClarenceIntro, Route129_Text_ClarenceDefeat)
	msgbox(Route129_Text_ClarencePostBattle, MSGBOX_AUTOCLOSE)
	call(Route129_EventScript_TryClarenceRematch)
	release
	end
}
script Route129_EventScript_TryClarenceRematch {
	lock
    call(Common_EventScript_ShouldDoRematch)
	goto_if_eq(VAR_RESULT, FALSE, Common_EventScript_NopReturn)
	setvar(VAR_0x8003, TRAINER_CLARENCE)
	setvar(VAR_0x8004, 1)
	call(Common_EventScript_CheckRecentRematchesSetBP)
	trainerbattle_no_intro(TRAINER_CLARENCE, Route129_Text_ClarenceDefeat)
	special(UpdateRecentTrainers)
	return
}

script Route129_EventScript_Shannon {
	trainerbattle_single(TRAINER_SHANNON, Route129_Text_ShannonIntro, Route129_Text_ShannonDefeat)
	msgbox(Route129_Text_ShannonPostBattle, MSGBOX_AUTOCLOSE)
	call(Route129_EventScript_TryShannonRematch)
	release
	end
}
script Route129_EventScript_TryShannonRematch {
	lock
    call(Common_EventScript_ShouldDoRematch)
	goto_if_eq(VAR_RESULT, FALSE, Common_EventScript_NopReturn)
	setvar(VAR_0x8003, TRAINER_SHANNON)
	setvar(VAR_0x8004, 1)
	call(Common_EventScript_CheckRecentRematchesSetBP)
	trainerbattle_no_intro(TRAINER_SHANNON, Route129_Text_ShannonDefeat)
	special(UpdateRecentTrainers)
	return
}
text Route129_Text_ShannonIntro {
	"Are you worthy?"
}
text Route129_Text_ShannonDefeat {
	"Good enough for me, anyway!"
}
text Route129_Text_ShannonPostBattle {
	"How has life been treating you lately?\n"
	"Take some time to smell the flowers."
}

script Route129_EventScript_Emma {
	trainerbattle_double(TRAINER_EMMA_AND_LIL, Route129_Text_EmmaIntro, Route129_Text_EmmaDefeat, Route129_Text_EmmaNotEnoughMons)
	msgbox(Route129_Text_EmmaPostBattle, MSGBOX_AUTOCLOSE)
	call(Route129_EventScript_TryEmmaRematch)
	release
	end
}
script Route129_EventScript_TryEmmaRematch {
	lock
    call(Common_EventScript_ShouldDoRematch)
	goto_if_eq(VAR_RESULT, FALSE, Common_EventScript_NopReturn)
	setvar(VAR_0x8003, TRAINER_EMMA_AND_LIL)
	setvar(VAR_0x8004, 1)
	call(Common_EventScript_CheckRecentRematchesSetBP)
	trainerbattle_no_intro(TRAINER_EMMA_AND_LIL, Route129_Text_EmmaDefeat)
	special(UpdateRecentTrainers)
	return
}
text Route129_Text_EmmaIntro {
	"Emma: Look sis, we can beat this loser!"
}

text Route129_Text_EmmaDefeat {
	"Emma: What? How?"
}
text Route129_Text_EmmaNotEnoughMons {
	"Emma: Come back with two Pokémon, worm!"
}
text Route129_Text_EmmaPostBattle {
	"Emma: Hmph! You're still a loser."
}

script Route129_EventScript_Lil {
	trainerbattle_double(TRAINER_EMMA_AND_LIL, Route129_Text_LilIntro, Route129_Text_LilDefeat, Route129_Text_LilNotEnoughMons)
	msgbox(Route129_Text_LilPostBattle, MSGBOX_AUTOCLOSE)
	call(Route129_EventScript_TryLilRematch)
	release
	end
}
script Route129_EventScript_TryLilRematch {
	lock
    call(Common_EventScript_ShouldDoRematch)
	goto_if_eq(VAR_RESULT, FALSE, Common_EventScript_NopReturn)
	setvar(VAR_0x8003, TRAINER_EMMA_AND_LIL)
	setvar(VAR_0x8004, 1)
	call(Common_EventScript_CheckRecentRematchesSetBP)
	trainerbattle_no_intro(TRAINER_EMMA_AND_LIL, Route129_Text_LilDefeat)
	special(UpdateRecentTrainers)
	return
}
text Route129_Text_LilIntro {
	"Lil: Me and Em are tougher than we look!"
}
text Route129_Text_LilDefeat {
	"Lil: Oh, no! My Pokémon!"
}
text Route129_Text_LilNotEnoughMons {
	"Lil: You need two Pokémon to fight us!"
}
text Route129_Text_LilPostBattle {
	"Lil: You're so cool!"
}
