script Route110_EventScript_NewMauvilleSouthSign {
	msgbox(format("New Mauville Power Plant\nSouth Entrance"), MSGBOX_SIGN)
	end
}

script Route110_OnLoad {
	call_if_eq(VAR_NEW_MAUVILLE_STATE, 0, Route110_EventScript_TryBlockNewMauville)
	end
}

script Route110_EventScript_TryBlockNewMauville {
	checkitem(ITEM_BASEMENT_KEY)
	goto_if_eq(VAR_RESULT, TRUE, Common_EventScript_NopReturn)
	setmetatile(31, 16, 0x00E, TRUE)
	setmetatile(31, 17, 0x0C6, TRUE)
	setmetatile(31, 18, 0x0C6, TRUE)
	setmetatile(32, 17, 0x0C6, TRUE)
	setmetatile(32, 18, 0x0C6, TRUE)
	setmetatile(33, 17, 0x0C6, TRUE)
	setmetatile(33, 18, 0x0C6, TRUE)
	return
}

script Route110_EventScript_AquaGrunt {
	msgbox(format("This place is a nightmare!\p Just think about how many Pok√©mon we disrupted by building TWO bridges across the estuary."), MSGBOX_NPC)
	end
}

script Route110_EventScript_MagmaGrunt {
	msgbox(format("Heh, this project was a smashing success!\p Now it's super easy, barely an inconvenience to travel between Slateport and Mauville!"), MSGBOX_NPC)
	end
}

script Route110_EventScript_Edward {
	trainerbattle_single(TRAINER_EDWARD, Route110_Text_EdwardIntro, Route110_Text_EdwardDefeated)
	msgbox(Route110_Text_EdwardPostBattle, MSGBOX_AUTOCLOSE)
	call(Route110_EventScript_TryEdwardRematch)
	release
	end
}
script Route110_EventScript_TryEdwardRematch {
	lock
    call(Common_EventScript_ShouldDoRematch)
	goto_if_eq(VAR_RESULT, FALSE, Common_EventScript_NopReturn)
	setvar(VAR_0x8003, TRAINER_EDWARD)
	setvar(VAR_0x8004, 1)
	if (defeated(TRAINER_ALYSSA)) {
		msgbox(format("Include Alyssa and make it a double battle?"), MSGBOX_YESNO)
		if (var(VAR_RESULT) == YES) {
			trainerbattle(TRAINER_BATTLE_SET_TRAINER_B, TRAINER_ALYSSA, 0, NULL, Route110_Text_AlyssaDefeated)
			addvar(VAR_0x8004, 1)
		}
	}
	call(Common_EventScript_CheckRecentRematchesSetBP)
    trainerbattle_no_intro(TRAINER_EDWARD, Route110_Text_EdwardDefeated)
	special(UpdateRecentTrainers)
	return
}

script Route110_EventScript_Jaclyn {
	trainerbattle_single(TRAINER_JACLYN, Route110_Text_JaclynIntro, Route110_Text_JaclynDefeated)
	msgbox(Route110_Text_JaclynPostBattle, MSGBOX_AUTOCLOSE)
	call(Route110_EventScript_TryJaclynRematch)
	release
	end
}
script Route110_EventScript_TryJaclynRematch {
	lock
    call(Common_EventScript_ShouldDoRematch)
	goto_if_eq(VAR_RESULT, FALSE, Common_EventScript_NopReturn)
	setvar(VAR_0x8003, TRAINER_JACLYN)
	setvar(VAR_0x8004, 1)
	call(Common_EventScript_CheckRecentRematchesSetBP)
	trainerbattle_no_intro(TRAINER_JACLYN, Route110_Text_JaclynDefeated)
	special(UpdateRecentTrainers)
	return
}

script Route110_EventScript_Edwin {
	trainerbattle_single(TRAINER_EDWIN, Route110_Text_EdwinIntro, Route110_Text_EdwinDefeated)
	msgbox(Route110_Text_EdwinPostBattle, MSGBOX_DEFAULT)
	call(Route110_EventScript_TryEdwinRematch)
	release
	end
}
script Route110_EventScript_TryEdwinRematch {
	lock
    call(Common_EventScript_ShouldDoRematch)
	goto_if_eq(VAR_RESULT, FALSE, Common_EventScript_NopReturn)
	setvar(VAR_0x8003, TRAINER_EDWIN)
	setvar(VAR_0x8004, 1)
	if (defeated(TRAINER_JOSEPH)) {
		msgbox(format("Include Joseph and make it a double battle?"), MSGBOX_YESNO)
		if (var(VAR_RESULT) == YES) {
			trainerbattle(TRAINER_BATTLE_SET_TRAINER_B, TRAINER_JOSEPH, 0, NULL, Route110_Text_JosephDefeated)
			addvar(VAR_0x8004, 1)
		}
	}
	call(Common_EventScript_CheckRecentRematchesSetBP)
    trainerbattle_no_intro(TRAINER_EDWIN, Route110_Text_EdwinRematchDefeated)
	special(UpdateRecentTrainers)
	return
}

script Route110_EventScript_Dale {
	trainerbattle_single(TRAINER_DALE, Route110_Text_DaleIntro, Route110_Text_DaleDefeated)
	msgbox(Route110_Text_DalePostBattle, MSGBOX_AUTOCLOSE)
	call(Route110_EventScript_TryDaleRematch)
	release
	end
}
script Route110_EventScript_TryDaleRematch {
	lock
    call(Common_EventScript_ShouldDoRematch)
	goto_if_eq(VAR_RESULT, FALSE, Common_EventScript_NopReturn)
	setvar(VAR_0x8003, TRAINER_DALE)
	setvar(VAR_0x8004, 1)
	call(Common_EventScript_CheckRecentRematchesSetBP)
	trainerbattle_no_intro(TRAINER_DALE, Route110_Text_DaleDefeated)
	special(UpdateRecentTrainers)
	return
}

script Route110_EventScript_Jacob {
	trainerbattle_single(TRAINER_JACOB, Route110_Text_JacobIntro, Route110_Text_JacobDefeated)
	msgbox(Route110_Text_JacobPostBattle, MSGBOX_AUTOCLOSE)
	call(Route110_EventScript_TryJacobRematch)
	release
	end
}
script Route110_EventScript_TryJacobRematch {
	lock
    call(Common_EventScript_ShouldDoRematch)
	goto_if_eq(VAR_RESULT, FALSE, Common_EventScript_NopReturn)
	setvar(VAR_0x8003, TRAINER_JACOB)
	setvar(VAR_0x8004, 1)
	call(Common_EventScript_CheckRecentRematchesSetBP)
	trainerbattle_no_intro(TRAINER_JACOB, Route110_Text_JacobDefeated)
	special(UpdateRecentTrainers)
	return
}

script Route110_EventScript_Anthony {
	trainerbattle_single(TRAINER_ANTHONY, Route110_Text_AnthonyIntro, Route110_Text_AnthonyDefeated)
	msgbox(Route110_Text_AnthonyPostBattle, MSGBOX_AUTOCLOSE)
	call(Route110_EventScript_TryAnthonyRematch)
	release
	end
}
script Route110_EventScript_TryAnthonyRematch {
	lock
    call(Common_EventScript_ShouldDoRematch)
	goto_if_eq(VAR_RESULT, FALSE, Common_EventScript_NopReturn)
	setvar(VAR_0x8003, TRAINER_ANTHONY)
	setvar(VAR_0x8004, 1)
	call(Common_EventScript_CheckRecentRematchesSetBP)
	trainerbattle_no_intro(TRAINER_ANTHONY, Route110_Text_AnthonyDefeated)
	special(UpdateRecentTrainers)
	return
}

script Route110_EventScript_Benjamin {
	trainerbattle_single(TRAINER_BENJAMIN, Route110_Text_BenjaminIntro, Route110_Text_BenjaminDefeated)
	msgbox(Route110_Text_BenjaminPostBattle, MSGBOX_DEFAULT)
	call(Route110_EventScript_TryBenjaminRematch)
	release
	end
}
script Route110_EventScript_TryBenjaminRematch {
	lock
    call(Common_EventScript_ShouldDoRematch)
	goto_if_eq(VAR_RESULT, FALSE, Common_EventScript_NopReturn)
	setvar(VAR_0x8003, TRAINER_BENJAMIN)
	setvar(VAR_0x8004, 1)
	call(Common_EventScript_CheckRecentRematchesSetBP)
	trainerbattle_no_intro(TRAINER_BENJAMIN, Route110_Text_BenjaminRematchDefeated)
	special(UpdateRecentTrainers)
	return
}

script Route110_EventScript_Jasmine {
	trainerbattle_single(TRAINER_JASMINE, Route110_Text_JasmineIntro, Route110_Text_JasmineDefeated)
	msgbox(Route110_Text_JasminePostBattle, MSGBOX_AUTOCLOSE)
	call(Route110_EventScript_TryJasmineRematch)
	release
	end
}
script Route110_EventScript_TryJasmineRematch {
	lock
    call(Common_EventScript_ShouldDoRematch)
	goto_if_eq(VAR_RESULT, FALSE, Common_EventScript_NopReturn)
	setvar(VAR_0x8003, TRAINER_JASMINE)
	setvar(VAR_0x8004, 1)
	call(Common_EventScript_CheckRecentRematchesSetBP)
	trainerbattle_no_intro(TRAINER_JASMINE, Route110_Text_JasmineDefeated)
	special(UpdateRecentTrainers)
	return
}

script Route110_EventScript_Abigail {
	trainerbattle_single(TRAINER_ABIGAIL, Route110_Text_AbigailIntro, Route110_Text_AbigailDefeated)
	msgbox(Route110_Text_AbigailRematchPostBattle, MSGBOX_DEFAULT)
	call(Route110_EventScript_TryAbigailRematch)
	release
	end
}
script Route110_EventScript_TryAbigailRematch {
	lock
    call(Common_EventScript_ShouldDoRematch)
	goto_if_eq(VAR_RESULT, FALSE, Common_EventScript_NopReturn)
	setvar(VAR_0x8003, TRAINER_ABIGAIL)
	setvar(VAR_0x8004, 1)
	call(Common_EventScript_CheckRecentRematchesSetBP)
	trainerbattle_no_intro(TRAINER_ABIGAIL, Route110_Text_AbigailRematchDefeated)
	special(UpdateRecentTrainers)
	return
}

script Route110_EventScript_Isabel {
	trainerbattle_single(TRAINER_ISABEL, Route110_Text_IsabelIntro, Route110_Text_IsabelDefeated)
	msgbox(Route110_Text_IsabelRematchPostBattle, MSGBOX_DEFAULT)
	call(Route110_EventScript_TryIsabelRematch)
	release
	end
}
script Route110_EventScript_TryIsabelRematch {
	lock
    call(Common_EventScript_ShouldDoRematch)
	goto_if_eq(VAR_RESULT, FALSE, Common_EventScript_NopReturn)
	setvar(VAR_0x8003, TRAINER_ISABEL)
	setvar(VAR_0x8004, 1)
	if (defeated(TRAINER_KALEB)) {
		msgbox(format("Include Kaleb and make it a double battle?"), MSGBOX_YESNO)
		if (var(VAR_RESULT) == YES) {
			trainerbattle(TRAINER_BATTLE_SET_TRAINER_B, TRAINER_KALEB, 0, NULL, Route110_Text_KalebDefeated)
			addvar(VAR_0x8004, 1)
		}
	}
	call(Common_EventScript_CheckRecentRematchesSetBP)
    trainerbattle_no_intro(TRAINER_ISABEL, Route110_Text_IsabelRematchDefeated)
	special(UpdateRecentTrainers)
	return
}

script Route110_EventScript_Timmy {
	trainerbattle_single(TRAINER_TIMMY, Route110_Text_TimmyIntro, Route110_Text_TimmyDefeated)
	msgbox(Route110_Text_TimmyPostBattle, MSGBOX_AUTOCLOSE)
	call(Route110_EventScript_TryTimmyRematch)
	release
	end
}
script Route110_EventScript_TryTimmyRematch {
	lock
    call(Common_EventScript_ShouldDoRematch)
	goto_if_eq(VAR_RESULT, FALSE, Common_EventScript_NopReturn)
	setvar(VAR_0x8003, TRAINER_TIMMY)
	setvar(VAR_0x8004, 1)
	call(Common_EventScript_CheckRecentRematchesSetBP)
	trainerbattle_no_intro(TRAINER_TIMMY, Route110_Text_TimmyDefeated)
	special(UpdateRecentTrainers)
	return
}

script Route110_EventScript_Kaleb {
	trainerbattle_single(TRAINER_KALEB, Route110_Text_KalebIntro, Route110_Text_KalebDefeated)
	msgbox(Route110_Text_KalebPostBattle, MSGBOX_AUTOCLOSE)
	call(Route110_EventScript_TryKalebRematch)
	release
	end
}
script Route110_EventScript_TryKalebRematch {
	lock
    call(Common_EventScript_ShouldDoRematch)
	goto_if_eq(VAR_RESULT, FALSE, Common_EventScript_NopReturn)
	setvar(VAR_0x8003, TRAINER_KALEB)
	setvar(VAR_0x8004, 1)
	if (defeated(TRAINER_ISABEL)) {
		msgbox(format("Include Isabel and make it a double battle?"), MSGBOX_YESNO)
		if (var(VAR_RESULT) == YES) {
			trainerbattle(TRAINER_BATTLE_SET_TRAINER_B, TRAINER_ISABEL, 0, NULL, Route110_Text_IsabelRematchDefeated)
			addvar(VAR_0x8004, 1)
		}
	}
	call(Common_EventScript_CheckRecentRematchesSetBP)
    trainerbattle_no_intro(TRAINER_KALEB, Route110_Text_KalebDefeated)
	special(UpdateRecentTrainers)
	return
}

script Route110_EventScript_Joseph {
	trainerbattle_single(TRAINER_JOSEPH, Route110_Text_JosephIntro, Route110_Text_JosephDefeated)
	msgbox(Route110_Text_JosephPostBattle, MSGBOX_AUTOCLOSE)
	call(Route110_EventScript_TryJosephRematch)
	release
	end
}
script Route110_EventScript_TryJosephRematch {
	lock
    call(Common_EventScript_ShouldDoRematch)
	goto_if_eq(VAR_RESULT, FALSE, Common_EventScript_NopReturn)
	setvar(VAR_0x8003, TRAINER_JOSEPH)
	setvar(VAR_0x8004, 1)
	if (defeated(TRAINER_EDWIN)) {
		msgbox(format("Include Edwin and make it a double battle?"), MSGBOX_YESNO)
		if (var(VAR_RESULT) == YES) {
			trainerbattle(TRAINER_BATTLE_SET_TRAINER_B, TRAINER_EDWIN, 0, NULL, Route110_Text_EdwinRematchDefeated)
			addvar(VAR_0x8004, 1)
		}
	}
	call(Common_EventScript_CheckRecentRematchesSetBP)
    trainerbattle_no_intro(TRAINER_JOSEPH, Route110_Text_JosephDefeated)
	special(UpdateRecentTrainers)
	return
}

script Route110_EventScript_Alyssa {
	trainerbattle_single(TRAINER_ALYSSA, Route110_Text_AlyssaIntro, Route110_Text_AlyssaDefeated)
	msgbox(Route110_Text_AlyssaPostBattle, MSGBOX_AUTOCLOSE)
	call(Route110_EventScript_TryAlyssaRematch)
	release
	end
}
script Route110_EventScript_TryAlyssaRematch {
	lock
    call(Common_EventScript_ShouldDoRematch)
	goto_if_eq(VAR_RESULT, FALSE, Common_EventScript_NopReturn)
	setvar(VAR_0x8003, TRAINER_ALYSSA)
	setvar(VAR_0x8004, 1)
	if (defeated(TRAINER_EDWARD)) {
		msgbox(format("Include Edward and make it a double battle?"), MSGBOX_YESNO)
		if (var(VAR_RESULT) == YES) {
			trainerbattle(TRAINER_BATTLE_SET_TRAINER_B, TRAINER_EDWARD, 0, NULL, Route110_Text_EdwardDefeated)
			addvar(VAR_0x8004, 1)
		}
	}
	call(Common_EventScript_CheckRecentRematchesSetBP)
    trainerbattle_no_intro(TRAINER_ALYSSA, Route110_Text_AlyssaDefeated)
	special(UpdateRecentTrainers)
	return
}

raw `
.set LOCALID_CHALLENGE_BIKER, 19

Route110_MapScripts::
	map_script MAP_SCRIPT_ON_RESUME, Route110_OnResume
	map_script MAP_SCRIPT_ON_LOAD, Route110_OnLoad
	map_script MAP_SCRIPT_ON_TRANSITION, Route110_OnTransition
	map_script MAP_SCRIPT_ON_FRAME_TABLE, Route110_OnFrame
	.byte 0

Route110_OnResume:
	special UpdateCyclingRoadState
	end

Route110_OnTransition:
	call_if_eq VAR_CYCLING_CHALLENGE_STATE, 1, Route110_EventScript_SaveCyclingMusic
	call Common_EventScript_DisableBPReward
	end

Route110_EventScript_SaveCyclingMusic::
	savebgm MUS_CYCLING
	return

Route110_OnFrame:
	map_script_2 VAR_CYCLING_CHALLENGE_STATE, 1, Route110_EventScript_BeginCylcingRoadChallenge
	.2byte 0

Route110_EventScript_BeginCylcingRoadChallenge::
	special Special_BeginCyclingRoadChallenge
	setvar VAR_CYCLING_CHALLENGE_STATE, 2
	return

Route110_EventScript_Boy1::
	msgbox Route110_Text_RideBikeAtFullSpeed, MSGBOX_NPC
	end

Route110_EventScript_CyclingGirl1::
	msgbox Route110_Text_HairStreamsBehindMe, MSGBOX_NPC
	end

Route110_EventScript_CyclingGuy1::
	msgbox Route110_Text_YouGotBikeFromRydel, MSGBOX_NPC
	end

Route110_EventScript_OldMan::
	msgbox Route110_Text_TwoRoads, MSGBOX_NPC
	end

Route110_EventScript_OldWoman::
	msgbox Route110_Text_WalkOnTheLowRoad, MSGBOX_NPC
	end

Route110_EventScript_CyclingGuy2::
	msgbox Route110_Text_BikeTechniques, MSGBOX_NPC
	end

Route110_EventScript_Boy2::
	msgbox Route110_Text_WhichShouldIChoose, MSGBOX_NPC
	end

Route110_EventScript_SlateportCitySign::
	msgbox Route110_Text_SlateportCitySign, MSGBOX_SIGN
	end

Route110_EventScript_CyclingRoadSign::
	msgbox Route110_Text_CyclingRoadSign, MSGBOX_SIGN
	end

Route110_EventScript_Route103Sign::
	msgbox Route110_Text_Route103Sign, MSGBOX_SIGN
	end

Route110_EventScript_SeasideParkingSign::
	msgbox Route110_Text_SeasideParkingSign, MSGBOX_SIGN
	end

Route110_EventScript_MauvilleCitySign::
	msgbox Route110_Text_MauvilleCitySign, MSGBOX_SIGN
	end

Route110_EventScript_TrickHouseSign::
	msgbox Route110_Text_TrickHouseSign, MSGBOX_SIGN
	end

Route110_EventScript_CyclingRoadResultsSign::
	lockall
	specialvar VAR_RESULT, GetRecordedCyclingRoadResults
	goto_if_eq VAR_RESULT, FALSE, Route110_EventScript_NoRecordSet
	msgbox Route110_Text_BestRecord, MSGBOX_DEFAULT
	releaseall
	end

Route110_EventScript_NoRecordSet::
	msgbox Route110_Text_ThereIsNoRecord, MSGBOX_DEFAULT
	releaseall
	end

Route110_EventScript_ChallengeGuy::
	lock
	faceplayer
	specialvar VAR_RESULT, GetPlayerAvatarBike
	goto_if_eq VAR_RESULT, 1, Route110_EventScript_PlayerRidingAcroBike
	goto_if_eq VAR_CYCLING_CHALLENGE_STATE, 0, Route110_EventScript_PlayerNotRidingBike
	msgbox Route110_Text_AlwaysAimHigher, MSGBOX_DEFAULT
	release
	end

Route110_EventScript_PlayerNotRidingBike::
	msgbox Route110_Text_RatedForNumberOfCollisions, MSGBOX_DEFAULT
	release
	end

Route110_EventScript_PlayerRidingAcroBike::
	msgbox Route110_Text_AcroBikesDoNotQualify, MSGBOX_DEFAULT
	release
	end

Route110_EventScript_CyclingChallengeEnd::
	lockall
	applymovement LOCALID_CHALLENGE_BIKER, Common_Movement_WalkInPlaceFasterRight
	waitmovement 0
	call Route110_EventScript_CyclingChallengeResults
	releaseall
	end

Route110_EventScript_CyclingChallengeResults::
	special FinishCyclingRoadChallenge
	msgbox Route110_Text_CyclingChallengeResultSummary, MSGBOX_DEFAULT
	switch VAR_RESULT
	case 10, Route110_EventScript_ChallengeReactionBest
	case 9, Route110_EventScript_ChallengeReactionGood
	case 8, Route110_EventScript_ChallengeReactionGood
	case 7, Route110_EventScript_ChallengeReactionGood
	case 6, Route110_EventScript_ChallengeReactionOk
	case 5, Route110_EventScript_ChallengeReactionOk
	case 4, Route110_EventScript_ChallengeReactionOk
	case 3, Route110_EventScript_ChallengeReactionBad
	case 2, Route110_EventScript_ChallengeReactionBad
	case 1, Route110_EventScript_ChallengeReactionBad
	case 0, Route110_EventScript_ChallengeReactionWorst
	end

Route110_EventScript_ChallengeReactionBest::
	msgbox Route110_Text_ChallengeReactionBest, MSGBOX_DEFAULT
	goto Route110_EventScript_EndChallenge
	end

Route110_EventScript_ChallengeReactionGood::
	msgbox Route110_Text_ChallengeReactionGood, MSGBOX_DEFAULT
	goto Route110_EventScript_EndChallenge
	end

Route110_EventScript_ChallengeReactionOk::
	msgbox Route110_Text_ChallengeReactionOk, MSGBOX_DEFAULT
	goto Route110_EventScript_EndChallenge
	end

Route110_EventScript_ChallengeReactionBad::
	msgbox Route110_Text_ChallengeReactionBad, MSGBOX_DEFAULT
	goto Route110_EventScript_EndChallenge
	end

Route110_EventScript_ChallengeReactionWorst::
	msgbox Route110_Text_ChallengeReactionWorst, MSGBOX_DEFAULT
	goto Route110_EventScript_EndChallenge
	end

Route110_EventScript_EndChallenge::
	setvar VAR_CYCLING_CHALLENGE_STATE, 3
	savebgm MUS_DUMMY
	fadedefaultbgm
	return

Route110_Text_RideBikeAtFullSpeed:
	.string "Wouldn't it be great to ride a Bike\n"
	.string "at full speed on Cycling Road?$"

Route110_Text_HairStreamsBehindMe:
	.string "How do you like the way my raven-\n"
	.string "colored hair streams behind me?\p"
	.string "I grew my hair out just for that.$"

Route110_Text_YouGotBikeFromRydel:
	.string "Oh, hey, you got that Bike from Rydel!\p"
	.string "Oh, it's glaringly obvious.\n"
	.string "It says right on your bike‚Ä¶\p"
	.string "Rydel, Rydel, Rydel, Rydel, Rydel,\n"
	.string "Rydel, Rydel, Rydel, Rydel, Rydel,\p"
	.string "Rydel, Rydel, Rydel, Rydel, Rydel,\n"
	.string "Rydel, Rydel, Rydel, Rydel, Rydel,\p"
	.string "Rydel, Rydel, Rydel, Rydel, Rydel,\n"
	.string "Rydel, Rydel, Rydel, Rydel, Rydel,\p"
	.string "Rydel, Rydel, Rydel, Rydel, Rydel,\n"
	.string "Rydel, Rydel, Rydel, Rydel, Rydel,\p"
	.string "Rydel, Rydel, Rydel, Rydel, Rydel‚Ä¶\n"
	.string "That name's everywhere.\p"
	.string "You should ride it around all over\n"
	.string "the place--it's good advertising!$"

Route110_Text_TwoRoads:
	.string "The two roads, one above, one below‚Ä¶\p"
	.string "A road each for people and Pok√©mon.\n"
	.string "Perhaps that is right and fair.$"

Route110_Text_WalkOnTheLowRoad:
	.string "I don't have a Bike, so I'll take\n"
	.string "a leisurely walk on the low road.$"

Route110_Text_BikeTechniques:
	.string "Learning techniques will make Bike\n"
	.string "riding even more fun.\p"
	.string "There are some places that you can\n"
	.string "reach only by using a Bike technique.$"

Route110_Text_WhichShouldIChoose:
	.string "Which should I choose?\p"
	.string "Make a beeline for Mauville on\n"
	.string "Cycling Road, or take the low road\l"
	.string "and look for Pok√©mon?$"

Route110_Text_CyclingChallengeResultSummary:
	.string "Number of collisions:\n"
	.string "‚Ä¶ ‚Ä¶ {STR_VAR_1}!\p"
	.string "Total time:\n"
	.string "‚Ä¶ ‚Ä¶ {STR_VAR_2}!$"

Route110_Text_ChallengeReactionBest:
	.string "Bravo! Splendid showing!\p"
	.string "Your love of cycling comes from deep\n"
	.string "within your heart.\l"
	.string "You've shaken me to my very soul!$"

Route110_Text_ChallengeReactionGood:
	.string "Your technique is remarkable.\p"
	.string "I suggest you speed up a bit while\n"
	.string "still avoiding collisions.$"

Route110_Text_ChallengeReactionOk:
	.string "I would consider you a work in\n"
	.string "progress.\p"
	.string "Still, I hope you don't forget the\n"
	.string "sheer pleasure of cycling.$"

Route110_Text_ChallengeReactionBad:
	.string "My word‚Ä¶ Your cycling skills border\n"
	.string "on terrifying.\p"
	.string "Most certainly, you need much more\n"
	.string "practice riding.$"

Route110_Text_ChallengeReactionWorst:
	.string "‚Ä¶I am aghast‚Ä¶\p"
	.string "You're perhaps not cut out for this\n"
	.string "unfortunate cycling business.\p"
	.string "You ought to give serious thought to\n"
	.string "returning that Bike to Rydel.$"

Route110_Text_RatedForNumberOfCollisions:
	.string "This is Cycling Road.\p"
	.string "If you were to ride from Mauville to\n"
	.string "Slateport on a Mach Bike, you would\l"
	.string "be rated for the number of collisions\l"
	.string "and your total time.$"

Route110_Text_AlwaysAimHigher:
	.string "Regardless of the results, I count on\n"
	.string "seeing more challenges from you.\l"
	.string "Always aim higher!$"

Route110_Text_AcroBikesDoNotQualify:
	.string "On this Cycling Road, those riding\n"
	.string "Mach Bikes are rated for their number\l"
	.string "of collisions and their total times.\p"
	.string "Acro Bikes do not qualify for rating.\n"
	.string "They are easy to turn, so it's not fair.$"

Route110_Text_SlateportCitySign:
	.string "Route 110\n"
	.string "{DOWN_ARROW} Slateport City$"

Route110_Text_CyclingRoadSign:
	.string "Seaside Cycling Road$"

Route110_Text_Route103Sign:
	.string "Route 110\n"
	.string "{LEFT_ARROW} Route 103$"

Route110_Text_SeasideParkingSign:
	.string "Seaside Parking$"

Route110_Text_MauvilleCitySign:
	.string "Route 110\n"
	.string "{UP_ARROW} Mauville City$"

Route110_Text_TrickHouseSign:
	.string "‚ÄúThree steps {RIGHT_ARROW} and two steps {UP_ARROW}\n"
	.string "to reach the wondrous Trick House.‚Äù$"

Route110_Text_BestRecord:
	.string "The best record to date‚Ä¶\p"
	.string "No. of collisions: {STR_VAR_1}\p"
	.string "Elapsed time: {STR_VAR_2}$"

Route110_Text_ThereIsNoRecord:
	.string "The best record to date‚Ä¶\p"
	.string "No one seems to have taken the\n"
	.string "challenge. There is no record‚Ä¶$"
`
